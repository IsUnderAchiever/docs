(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[247], { 9608: function (s, e, n) { (window.__NEXT_P = window.__NEXT_P || []).push(["/docs/advanced/performance.html", function () { return n(4146) }]) }, 4146: function (s, e, n) { "use strict"; n.r(e), n.d(e, { __toc: function () { return i } }); var r = n(2676), l = n(3017), o = n(6952); let i = [{ depth: 2, value: "重复数据删除", id: "deduplication" }, { depth: 2, value: "深度比较", id: "deep-comparison" }, { depth: 2, value: "依赖收集", id: "dependency-collection" }, { depth: 2, value: "Tree Shaking", id: "tree-shaking" }]; function c (s) { let e = Object.assign({ h1: "h1", p: "p", strong: "strong", a: "a", code: "code", ul: "ul", li: "li", em: "em", h2: "h2", pre: "pre", span: "span" }, (0, o.a)(), s.components); return (0, r.jsxs)(r.Fragment, { children: [(0, r.jsx)(e.h1, { children: "性能" }), "\n", (0, r.jsxs)(e.p, { children: ["SWR 在各种 web 应用中提供了关键功能，因此 ", (0, r.jsx)(e.strong, { children: "性能" }), " 是重中之重。"] }), "\n", (0, r.jsxs)(e.p, { children: ["SWR 内置的 ", (0, r.jsx)(e.strong, { children: "缓存" }), " 和 ", (0, r.jsx)(e.strong, { children: (0, r.jsx)(e.a, { href: "#%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE%E5%88%A0%E9%99%A4", children: "重复数据删除" }) }), " 会跳过不必要的网络请求，但 ", (0, r.jsx)(e.code, { children: "useSWR" }), " hook 本身的性能仍然很重要。在一个复杂的应用中，单个页面渲染可能会调用数百次 ", (0, r.jsx)(e.code, { children: "useSWR" }), "。"] }), "\n", (0, r.jsx)(e.p, { children: "SWR 确保你的应用具有：" }), "\n", (0, r.jsxs)(e.ul, { children: ["\n", (0, r.jsx)(e.li, { children: (0, r.jsx)(e.em, { children: "没有不必要的请求" }) }), "\n", (0, r.jsx)(e.li, { children: (0, r.jsx)(e.em, { children: "没有不必要的重新渲染" }) }), "\n", (0, r.jsx)(e.li, { children: (0, r.jsx)(e.em, { children: "没有不必要的代码导入" }) }), "\n"] }), "\n", (0, r.jsx)(e.p, { children: "而无需你更改任何代码。" }), "\n", (0, r.jsx)(e.h2, { id: "deduplication", children: "重复数据删除" }), "\n", (0, r.jsx)(e.p, { children: "在应用中重用 SWR hooks 非常常见。例如，一个应用渲染 5 次当前用户的头像：" }), "\n", (0, r.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, r.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useUser" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, r.jsx)(e.span, { className: "line", children: " " }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Avatar" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useUser" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: " " }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (error) " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Error" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "data) " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Spinner" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: " " }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "img" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "src" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".avatar_url} />" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, r.jsx)(e.span, { className: "line", children: " " }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <>" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Avatar" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Avatar" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Avatar" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Avatar" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Avatar" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </>" }) }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, r.jsxs)(e.p, { children: ["每个 ", (0, r.jsx)(e.code, { children: "<Avatar>" }), " 组件内部都有一个 ", (0, r.jsx)(e.code, { children: "useSWR" }), " hook。由于它们具有相同的 SWR key，并且几乎同时渲染，因此 ", (0, r.jsx)(e.strong, { children: "只会发送 1 个网络请求" }), "。"] }), "\n", (0, r.jsxs)(e.p, { children: ["你可以在任何地方重用数据 hooks（比如上面示例中的 ", (0, r.jsx)(e.code, { children: "useUser" }), "），而不用担心性能或重复请求。"] }), "\n", (0, r.jsxs)(e.p, { children: ["还有一个 ", (0, r.jsxs)(e.a, { href: "/docs/api.html", children: [(0, r.jsx)(e.code, { children: "dedupingInterval" }), " 选项"] }), " 用于覆盖默认的重复数据删除间隔。"] }), "\n", (0, r.jsx)(e.h2, { id: "deep-comparison", children: "深度比较" }), "\n", (0, r.jsxs)(e.p, { children: ["SWR 默认 ", (0, r.jsx)(e.strong, { children: "深度比较" }), " 数据更改。如果 ", (0, r.jsx)(e.code, { children: "data" }), " 值没有改变，则不会触发重新渲染。"] }), "\n", (0, r.jsxs)(e.p, { children: ["如果你还想更改的话，可以通过 ", (0, r.jsxs)(e.a, { href: "/docs/api.html", children: [(0, r.jsx)(e.code, { children: "compare" }), " 选项"] }), " 自定义比较函数。比如，某些 API 响应返回一个服务器时间戳，你可能想从数据 diff 中排除它。"] }), "\n", (0, r.jsx)(e.h2, { id: "dependency-collection", children: "依赖收集" }), "\n", (0, r.jsxs)(e.p, { children: [(0, r.jsx)(e.code, { children: "useSWR" }), " 返回 4 个 ", (0, r.jsx)(e.strong, { children: "有状态的" }), " 值：", (0, r.jsx)(e.code, { children: "data" }), "、", (0, r.jsx)(e.code, { children: "error" }), "、", (0, r.jsx)(e.code, { children: "isLoading" }), "和 ", (0, r.jsx)(e.code, { children: "isValidating" }), "，每个都可以独立更新。例如，如果我们在一个完整的数据请求生命周期中打印这些值，则将如下所示："] }), "\n", (0, r.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, r.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isLoading" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isValidating" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api'" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "console" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".log" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(data" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " error" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " isLoading" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " isValidating)" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, r.jsx)(e.p, { children: "在最坏的情况下（第一个请求失败，然后重试成功），你将看到 4 行日志：" }), "\n", (0, r.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, r.jsxs)(e.code, { "data-language": "js", "data-theme": "default", children: [(0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// console.log(data, error, isLoading, isValidating)" }) }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// => 开始 fetching" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " Error " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "false" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "false" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "     " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// => 结束 fetching，出现错误" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " Error " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// => 开始重试" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "Data " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "false" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "false" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// => 重试结束，得到数据" })] })] }) }), "\n", (0, r.jsxs)(e.p, { children: ["状态的改变是有道理的。但这也意味着组件 ", (0, r.jsx)(e.strong, { children: "渲染了 4 次" }), "。"] }), "\n", (0, r.jsxs)(e.p, { children: ["如果我们将组件更改为只使用 ", (0, r.jsx)(e.code, { children: "data" }), "："] }), "\n", (0, r.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, r.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api'" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "console" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".log" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(data)" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, r.jsxs)(e.p, { children: ["神奇的事情发生了 - 现在只有 ", (0, r.jsx)(e.strong, { children: "2 次重新渲染" }), "："] }), "\n", (0, r.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, r.jsxs)(e.code, { "data-language": "js", "data-theme": "default", children: [(0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// console.log(data)" }) }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// => hydration / 初始渲染" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "Data      " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// => 重试结束，得到数据" })] })] }) }), "\n", (0, r.jsxs)(e.p, { children: ["内部发生了完全相同的过程，第一个请求出现了错误，然后我们重试得到了数据。但是，", (0, r.jsx)(e.strong, { children: "SWR 只更新了组件使用的状态" }), "，即：", (0, r.jsx)(e.code, { children: "data" }), "。"] }), "\n", (0, r.jsxs)(e.p, { children: ["如果你不是总使用这3种状态，那么你已经从这个特性中获益了。在 ", (0, r.jsx)(e.a, { href: "https://vercel.com", children: "Vercel" }), " 的实际应用中，这个优化减少了约 60% 的重新渲染。"] }), "\n", (0, r.jsx)(e.h2, { id: "tree-shaking", children: "Tree Shaking" }), "\n", (0, r.jsxs)(e.p, { children: ["SWR 满足 ", (0, r.jsx)(e.a, { href: "https://webpack.js.org/guides/tree-shaking", children: "tree-shakeable" }), " 且没有副作用。这意味着如果你只导入核心的 ", (0, r.jsx)(e.code, { children: "useSWR" }), " API，像 ", (0, r.jsx)(e.code, { children: "useSWRInfinite" }), " 这样的未使用的 API 将不会绑定到你的应用中。"] })] }) } e.default = (0, l.j)({ MDXContent: function () { let s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e } = Object.assign({}, (0, o.a)(), s.components); return e ? (0, r.jsx)(e, { ...s, children: (0, r.jsx)(c, { ...s }) }) : c(s) }, pageOpts: { filePath: "pages/docs/advanced/performance.mdx.html", route: "/docs/advanced/performance.html", title: "性能", headings: i }, pageNextRoute: "/docs/advanced/performance.html" }) } }, function (s) { s.O(0, [17, 888, 774, 179], function () { return s(s.s = 9608) }), _N_E = s.O() }])