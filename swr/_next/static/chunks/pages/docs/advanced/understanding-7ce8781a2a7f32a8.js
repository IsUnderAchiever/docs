(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[29], { 9917: function (s, e, n) { (window.__NEXT_P = window.__NEXT_P || []).push(["/docs/advanced/understanding.html", function () { return n(2955) }]) }, 2955: function (s, e, n) { "use strict"; n.r(e), n.d(e, { __toc: function () { return j }, default: function () { return v } }); var i = n(2676), r = n(3017), l = n(6952), o = { src: "/_next/static/media/fetch-and-revalidate.3ebb9990.svg", height: 877, width: 2462, blurWidth: 0, blurHeight: 0 }, c = { src: "/_next/static/media/key-change.a9707442.svg", height: 877, width: 2462, blurWidth: 0, blurHeight: 0 }, a = { src: "/_next/static/media/key-change-previous-data.56666cd1.svg", height: 879, width: 2462, blurWidth: 0, blurHeight: 0 }, t = { src: "/_next/static/media/fallback.4dfeb9dc.svg", height: 877, width: 2462, blurWidth: 0, blurHeight: 0 }, h = { src: "/_next/static/media/key-change-fallback.9d60e9ab.svg", height: 877, width: 2462, blurWidth: 0, blurHeight: 0 }, d = { src: "/_next/static/media/key-change-previous-data-fallback.571a56f8.svg", height: 877, width: 2462, blurWidth: 0, blurHeight: 0 }, x = { src: "/_next/static/media/isloading.12715e06.gif", height: 394, width: 1166, blurWidth: 0, blurHeight: 0 }, k = n(4894), p = n(1621); let j = [{ depth: 2, value: "状态机制", id: "state-machine" }, { depth: 3, value: "请求与重新请求", id: "fetch-and-revalidate" }, { depth: 3, value: "Key 的变化", id: "key-change" }, { depth: 3, value: "Key 的变化 + 保留之前的数据", id: "key-change--previous-data" }, { depth: 3, value: "设置预设数据", id: "fallback" }, { depth: 3, value: "Key 的变化 + 设置预设数据", id: "key-change--fallback" }, { depth: 3, value: "Key 的变化 + 保留之前的数据 + 设置预设数据", id: "key-change--previous-data--fallback" }, { depth: 2, value: "结合 isLoading 和 isValidating 以获得更好的用户体验", id: "combining-with-isloading-and-isvalidating-for-better-ux" }, { depth: 2, value: "返回之前的数据以获得更好的用户体验", id: "return-previous-data-for-better-ux" }, { depth: 2, value: "性能依赖关系收集", id: "dependency-collection-for-performance" }]; function y (s) { let e = Object.assign({ h1: "h1", h2: "h2", p: "p", code: "code", h3: "h3", img: "img", ul: "ul", li: "li", pre: "pre", span: "span", a: "a" }, (0, l.a)(), s.components); return (0, i.jsxs)(i.Fragment, { children: [(0, i.jsx)(e.h1, { children: "理解 SWR" }), "\n", (0, i.jsx)(e.h2, { id: "state-machine", children: "状态机制" }), "\n", (0, i.jsxs)(e.p, { children: [(0, i.jsx)(e.code, { children: "useSWR" }), " 会根据 ", (0, i.jsx)(e.code, { children: "fetcher" }), " 函数的状态返回 ", (0, i.jsx)(e.code, { children: "data" }), "，", (0, i.jsx)(e.code, { children: "error" }), "，", (0, i.jsx)(e.code, { children: "isLoading" }), " 和 ", (0, i.jsx)(e.code, { children: "isValidating" }), "。以下这些图片描述了 SWR 在不同情况下是如何返回值的。"] }), "\n", (0, i.jsx)(e.h3, { id: "fetch-and-revalidate", children: "请求与重新请求" }), "\n", (0, i.jsx)(e.p, { children: "这种模式表示请求数据，并在之后重新请求的场景。" }), "\n", (0, i.jsx)(e.p, { children: (0, i.jsx)(e.img, { alt: "A pattern for fetch and revalidate", src: o }) }), "\n", (0, i.jsx)(e.h3, { id: "key-change", children: "Key 的变化" }), "\n", (0, i.jsx)(e.p, { children: "这种模式表示在请求数据，再改变 key 值，并在之后重新请求的场景。" }), "\n", (0, i.jsx)(e.p, { children: (0, i.jsx)(e.img, { alt: "A pattern for key change", src: c }) }), "\n", (0, i.jsx)(e.h3, { id: "key-change--previous-data", children: "Key 的变化 + 保留之前的数据" }), "\n", (0, i.jsxs)(e.p, { children: ["这种模式表示在开启 ", (0, i.jsx)(e.code, { children: "keepPreviousData" }), " 选项时，请求数据，再改变 key 值，并在之后重新请求的场景。"] }), "\n", (0, i.jsx)(e.p, { children: (0, i.jsx)(e.img, { alt: "A pattern for key change + previous data", src: a }) }), "\n", (0, i.jsx)(e.h3, { id: "fallback", children: "设置预设数据" }), "\n", (0, i.jsx)(e.p, { children: "这种模式表示设置了预设数据时，请求数据，并在之后进行重新请求的场景。" }), "\n", (0, i.jsx)(e.p, { children: (0, i.jsx)(e.img, { alt: "A pattern for fallback", src: t }) }), "\n", (0, i.jsx)(e.h3, { id: "key-change--fallback", children: "Key 的变化 + 设置预设数据" }), "\n", (0, i.jsx)(e.p, { children: "这种模式表示在设置预设数据时，请求数据，再改变 key 值，并在之后进行重新请求的场景。" }), "\n", (0, i.jsx)(e.p, { children: (0, i.jsx)(e.img, { alt: "A pattern for key change + fallback", src: h }) }), "\n", (0, i.jsx)(e.h3, { id: "key-change--previous-data--fallback", children: "Key 的变化 + 保留之前的数据 + 设置预设数据" }), "\n", (0, i.jsxs)(e.p, { children: ["这种模式表示在开启 ", (0, i.jsx)(e.code, { children: "keepPreviousData" }), " 选项并设置预设数据时，请求数据，再改变 key 值，并在之后进行重新请求的场景。"] }), "\n", (0, i.jsx)(e.p, { children: (0, i.jsx)(e.img, { alt: "A pattern for key change + previous data + fallback", src: d }) }), "\n", (0, i.jsxs)(e.h2, { id: "combining-with-isloading-and-isvalidating-for-better-ux", children: ["结合 ", (0, i.jsx)(e.code, { children: "isLoading" }), " 和 ", (0, i.jsx)(e.code, { children: "isValidating" }), " 以获得更好的用户体验"] }), "\n", (0, i.jsxs)(e.p, { children: ["相比于现有的 ", (0, i.jsx)(e.code, { children: "isValidating" }), " ，", (0, i.jsx)(e.code, { children: "isLoading" }), " 是一个新的属性，它可以帮助我们应对更加普遍的用户加载场景。"] }), "\n", (0, i.jsxs)(e.ul, { children: ["\n", (0, i.jsxs)(e.li, { children: ["无论数据是否已加载，只要有一个正在进行中的请求，", (0, i.jsx)(e.code, { children: "isValidating" }), " 都会变为 ", (0, i.jsx)(e.code, { children: "true" }), " 。"] }), "\n", (0, i.jsxs)(e.li, { children: ["当数据尚未加载并且有一个正在进行的请求时，", (0, i.jsx)(e.code, { children: "isLoading" }), " 会变为 ", (0, i.jsx)(e.code, { children: "true" }), " 。"] }), "\n"] }), "\n", (0, i.jsxs)(e.p, { children: ["简而言之，我们可以使用 ", (0, i.jsx)(e.code, { children: "isValidating" }), " 来表示每次正在进行的重新请求；使用 ", (0, i.jsx)(e.code, { children: "isLoading" }), " 来表示 SWR 正在重新请求中，但目前还没有数据可以展示。"] }), "\n", (0, i.jsx)(k.UW, { emoji: "\uD83D\uDCDD", children: (0, i.jsxs)(e.p, { children: ["预设数据（Fallback Data）和之前的数据（Previous Data）不会被认为是“已加载的数据”，因此在设置了预设数据或启用 ", (0, i.jsx)(e.code, { children: "keepPreviousData" }), " 选项时，你可能有数据要展示。"] }) }), "\n", (0, i.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, i.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Stock" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isLoading" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isValidating" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "STOCK_API" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    refreshInterval" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "3000" })] }), "\n", (0, i.jsx)(e.span, { className: "line", children: (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  });" }) }), "\n", (0, i.jsx)(e.span, { className: "line", children: " " }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 如果初始数据仍在加载，这里将不展示任何内容。" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 我们在这里返回一个骨架屏。" })] }), "\n", (0, i.jsx)(e.span, { className: "line", children: " " }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (isLoading) " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "className" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"skeleton"' }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />;" })] }), "\n", (0, i.jsx)(e.span, { className: "line", children: " " }), "\n", (0, i.jsx)(e.span, { className: "line", children: " " }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 否则展示响应数据和一个表示后台正在重新请求的加载器。" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, i.jsx)(e.span, { className: "line", children: (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <>" }) }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">${data}</" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      {isValidating " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "className" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"spinner"' }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " /> " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" })] }), "\n", (0, i.jsx)(e.span, { className: "line", children: (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </>" }) }), "\n", (0, i.jsx)(e.span, { className: "line", children: (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  );" }) }), "\n", (0, i.jsx)(e.span, { className: "line", children: (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, i.jsx)(e.p, { children: (0, i.jsx)(e.img, { alt: "An example of using the isLoading state", src: x }) }), "\n", (0, i.jsxs)(e.p, { children: ["点击 ", (0, i.jsx)(e.a, { href: "https://codesandbox.io/s/swr-isloading-jtopow", children: "这里" }), " 查看完整代码示例。"] }), "\n", (0, i.jsx)(e.h2, { id: "return-previous-data-for-better-ux", children: "返回之前的数据以获得更好的用户体验" }), "\n", (0, i.jsxs)(e.p, { children: ["在用户连续操作的情况下进行数据请求时，例如输入时实时搜索，保留之前的数据可以极大提升用户体验，", (0, i.jsx)(e.code, { children: "keepPreviousData" }), " 选项可以用于启用该行为。下例是一个简单的用户搜索界面:"] }), "\n", (0, i.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, i.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Search" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "search" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setSearch" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "] " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "React" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".useState" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "''" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ");" })] }), "\n", (0, i.jsx)(e.span, { className: "line", children: " " }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isLoading" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`/search?q=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "${" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "search" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "}" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    keepPreviousData" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" })] }), "\n", (0, i.jsx)(e.span, { className: "line", children: (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  });" }) }), "\n", (0, i.jsx)(e.span, { className: "line", children: " " }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "input" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "type" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"text"' })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "value" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{search}" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onChange" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{(e) " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setSearch" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "e" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "." }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "target" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".value)}" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "placeholder" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"Search..."' })] }), "\n", (0, i.jsx)(e.span, { className: "line", children: (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      />" }) }), "\n", (0, i.jsx)(e.span, { className: "line", children: " " }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "className" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{isLoading " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"loading"' }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '""' }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}>" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        {" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "?." }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "products" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".map" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(item " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Product" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "key" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "item" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".id} " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "name" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "item" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name} />)" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "</" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "div" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ">" })] }), "\n", (0, i.jsxs)(e.span, { className: "line", children: [(0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "</" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "div" }), (0, i.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ">" })] }), "\n", (0, i.jsx)(e.span, { className: "line", children: (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  );" }) }), "\n", (0, i.jsx)(e.span, { className: "line", children: (0, i.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, i.jsxs)(e.p, { children: ["如果启用了 ", (0, i.jsx)(e.code, { children: "keepPreviousData" }), "，即使我们改变了 SWR key 值并以新的 key 值重新开始加载，我们仍然可以保留之前的数据。"] }), "\n", (0, i.jsx)(p.Z, { src: "https://user-images.githubusercontent.com/3676859/163695903-a3eb1259-180e-41e0-821e-21c320201194.mp4", caption: "当启用 keepPreviousData 时，保留上一次搜索的结果", ratio: 640 / 730 }), "\n", (0, i.jsxs)(e.p, { children: ["在这里查看完整代码示例：", (0, i.jsx)(e.a, { href: "https://codesandbox.io/s/swr-keeppreviousdata-fsjz3m", children: "https://codesandbox.io/s/swr-keeppreviousdata-fsjz3m" })] }), "\n", (0, i.jsx)(e.h2, { id: "dependency-collection-for-performance", children: "性能依赖关系收集" }), "\n", (0, i.jsxs)(e.p, { children: ["SWR 只会在组件中所使用的状态被更新时，触发重新渲染。如果只在组件中使用 ", (0, i.jsx)(e.code, { children: "data" }), "，SWR 将忽略其他属性（如 ", (0, i.jsx)(e.code, { children: "isValidating" }), " 和 ", (0, i.jsx)(e.code, { children: "isLoading" }), "）的更新。这大大减少了渲染次数。点击 ", (0, i.jsx)(e.a, { href: "/docs/advanced/performance#dependency-collection.html", children: "这里" }), " 查看更多信息。"] })] }) } var v = (0, r.j)({ MDXContent: function () { let s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e } = Object.assign({}, (0, l.a)(), s.components); return e ? (0, i.jsx)(e, { ...s, children: (0, i.jsx)(y, { ...s }) }) : y(s) }, pageOpts: { filePath: "pages/docs/advanced/understanding.mdx.html", route: "/docs/advanced/understanding.html", title: "理解 SWR", headings: j }, pageNextRoute: "/docs/advanced/understanding.html" }) }, 1621: function (s, e, n) { "use strict"; n.d(e, { Z: function () { return l } }); var i = n(2676), r = n(5271); function l (s) { let { id: e } = s, [n, l] = (0, r.useState)(!1); return (0, i.jsx)("div", { className: "my-4 overflow-hidden relative rounded-xl", children: (0, i.jsx)("iframe", { className: "w-full aspect-video", src: "https://www.youtube.com/embed/".concat(e), title: "YouTube video player", allow: "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture", onLoad: () => l(!0) }) }) } } }, function (s) { s.O(0, [17, 888, 774, 179], function () { return s(s.s = 9917) }), _N_E = s.O() }])