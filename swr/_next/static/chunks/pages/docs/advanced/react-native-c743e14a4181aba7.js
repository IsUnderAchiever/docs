(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[821], { 9: function (s, e, n) { (window.__NEXT_P = window.__NEXT_P || []).push(["/docs/advanced/react-native.html", function () { return n(5356) }]) }, 5356: function (s, e, n) { "use strict"; n.r(e), n.d(e, { __toc: function () { return c } }); var l = n(2676), r = n(3017), i = n(6952), o = n(4894); let c = [{ depth: 2, value: "示例", id: "example" }, { depth: 3, value: "全局设置", id: "global-setup" }, { depth: 3, value: "自定义 focus 和 reconnect 事件", id: "customize-focus-and-reconnect-events" }]; function a (s) { let e = Object.assign({ h1: "h1", p: "p", code: "code", h2: "h2", h3: "h3", pre: "pre", span: "span", a: "a" }, (0, i.a)(), s.components); return (0, l.jsxs)(l.Fragment, { children: [(0, l.jsx)(e.h1, { children: "React Native" }), "\n", (0, l.jsx)(o.UW, { children: (0, l.jsx)(e.p, { children: "升级到最新版本（≥ 1.0.0）来体验该定制。" }) }), "\n", (0, l.jsxs)(e.p, { children: ["与在浏览器中运行的 React 不同，React Native 有着非常不同的使用体验。比如没有“标签聚焦”，而从后台切换到 app 则被视为“聚焦”。要想自定义这些行为，你可以使用 React Native 的 app 状态检测和其他原生移植 API 替换默认的 ", (0, l.jsx)(e.code, { children: "focus" }), " 和 ", (0, l.jsx)(e.code, { children: "online" }), "，并配置 SWR 来使用。"] }), "\n", (0, l.jsx)(e.h2, { id: "example", children: "示例" }), "\n", (0, l.jsx)(e.h3, { id: "global-setup", children: "全局设置" }), "\n", (0, l.jsxs)(e.p, { children: ["你可以将 app 包装在 ", (0, l.jsx)(e.code, { children: "SWRConfig" }), " 下并预设置所有配置"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "<" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "value" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{{" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "/* ... */" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "App" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] })] }) }), "\n", (0, l.jsxs)(e.h3, { id: "customize-focus-and-reconnect-events", children: ["自定义 ", (0, l.jsx)(e.code, { children: "focus" }), " 和 ", (0, l.jsx)(e.code, { children: "reconnect" }), " 事件"] }), "\n", (0, l.jsxs)(e.p, { children: ["只有很少的的配置需要你来处理，诸如 ", (0, l.jsx)(e.code, { children: "isOnline" }), "、", (0, l.jsx)(e.code, { children: "isVisible" }), "、", (0, l.jsx)(e.code, { children: "initFocus" }), " 以及 ", (0, l.jsx)(e.code, { children: "initReconnect" }), "。"] }), "\n", (0, l.jsxs)(e.p, { children: [(0, l.jsx)(e.code, { children: "isOnline" }), " 和 ", (0, l.jsx)(e.code, { children: "isVisible" }), ' 是两个返回布尔值的函数，它们用来确定应用程序是否是 "active" 的。默认情况下，如果不满足这些条件，SWR 将取消重新请求。'] }), "\n", (0, l.jsxs)(e.p, { children: ["在使用 ", (0, l.jsx)(e.code, { children: "initFocus" }), " 和 ", (0, l.jsx)(e.code, { children: "initReconnect" }), " 时，还需要设置一个", (0, l.jsx)(e.a, { href: "/docs/advanced/cache.html", children: "自定义缓存 provider" }), "。可以使用空的 ", (0, l.jsx)(e.code, { children: "Map()" }), " 或任何你喜欢的。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "<" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "value" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{{" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "provider" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "new" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Map" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "isOnline" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "/* 自定义网络状态检测器 */" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    }" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "isVisible" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "/* 自定义 visibility 状态检测器 */" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    }" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "initFocus" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(callback) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "/* 向状态 provider 注册侦听器 */" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    }" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "initReconnect" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(callback) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "/* 向状态 provider 注册侦听器 */" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    }" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "App" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["以 ", (0, l.jsx)(e.code, { children: "initFocus" }), " 为例："] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { AppState } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'react-native'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ..." }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "<" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "value" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{{" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "provider" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "new" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Map" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "isVisible" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "initFocus" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(callback) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "let" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " appState " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "AppState" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".currentState" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onAppStateChange" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (nextAppState) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "/* 如果正在从后台或非 active 模式恢复到 active 模式 */" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "appState" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".match" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "/inactive" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "|" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "background/" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "&&" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " nextAppState " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "===" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'active'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "          " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "callback" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        }" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        appState " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " nextAppState" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      }" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 订阅 app 状态更改事件" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "subscription" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "AppState" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".addEventListener" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'change'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " onAppStateChange)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "subscription" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".remove" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      }" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    }" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "App" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["关于 ", (0, l.jsx)(e.code, { children: "initReconnect" }), "，它需要第三方库例如 ", (0, l.jsx)(e.a, { href: "https://github.com/react-native-netinfo/react-native-netinfo", children: "NetInfo" }), " 来订阅网络状态。具体实现和上面的例子类似：接收 ", (0, l.jsx)(e.code, { children: "callback" }), " 函数并在网络从离线状态恢复时触发它，然后 SWR 会启动重新请求以确保数据始终是最新的。"] })] }) } e.default = (0, r.j)({ MDXContent: function () { let s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e } = Object.assign({}, (0, i.a)(), s.components); return e ? (0, l.jsx)(e, { ...s, children: (0, l.jsx)(a, { ...s }) }) : a(s) }, pageOpts: { filePath: "pages/docs/advanced/react-native.mdx.html", route: "/docs/advanced/react-native.html", title: "React Native", headings: c }, pageNextRoute: "/docs/advanced/react-native.html" }) } }, function (s) { s.O(0, [17, 888, 774, 179], function () { return s(s.s = 9) }), _N_E = s.O() }])