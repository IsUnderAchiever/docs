(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[79], { 8918: function (s, e, l) { (window.__NEXT_P = window.__NEXT_P || []).push(["/docs/middleware.html", function () { return l(2080) }]) }, 2080: function (s, e, l) { "use strict"; l.r(e), l.d(e, { __toc: function () { return c } }); var n = l(2676), r = l(3017), o = l(6952), i = l(4894); let c = [{ depth: 2, value: "用法", id: "usage" }, { depth: 3, value: "API", id: "api" }, { depth: 3, value: "扩展", id: "extend" }, { depth: 3, value: "多个中间件", id: "multiple-middleware" }, { depth: 2, value: "示例", id: "examples" }, { depth: 3, value: "请求日志记录器", id: "request-logger" }, { depth: 3, value: "保留之前的结果", id: "keep-previous-result" }, { depth: 3, value: "序列化对象 key", id: "serialize-object-keys" }]; function t (s) { let e = Object.assign({ h1: "h1", p: "p", h2: "h2", code: "code", h3: "h3", em: "em", a: "a", pre: "pre", span: "span", strong: "strong" }, (0, o.a)(), s.components); return (0, n.jsxs)(n.Fragment, { children: [(0, n.jsx)(e.h1, { children: "中间件" }), "\n", (0, n.jsx)(i.UW, { children: (0, n.jsx)(e.p, { children: "升级到最新版本（≥ 1.0.0）来使用该功能。" }) }), "\n", (0, n.jsx)(e.p, { children: "中间件是 SWR 1.0 中新增的一个功能，它让你能够在 SWR hook 之前和之后执行代码。" }), "\n", (0, n.jsx)(e.h2, { id: "usage", children: "用法" }), "\n", (0, n.jsxs)(e.p, { children: ["中间件接收 SWR hook，可以在运行它之前和之后执行逻辑。如果有多个中间件，则每个中间件包装下一个中间件。列表中的最后一个中间件将接收原始的 SWR hook ", (0, n.jsx)(e.code, { children: "useSWR" }), "。"] }), "\n", (0, n.jsx)(e.h3, { id: "api", children: "API" }), "\n", (0, n.jsx)(e.p, { children: (0, n.jsxs)(e.em, { children: ["Notes: 函数名开头最好不要大写 (如使用 ", (0, n.jsx)(e.code, { children: "myMiddleware" }), " 来代替 ", (0, n.jsx)(e.code, { children: "MyMiddleware" }), ")，否则 React lint 规则会抛出 ", (0, n.jsx)(e.code, { children: "Rules of Hook" }), " 的错误"] }) }), "\n", (0, n.jsx)(e.p, { children: (0, n.jsx)(e.a, { href: "/docs/typescript#middleware-types.html", children: "TypeScript" }) }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "myMiddleware" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (useSWRNext) {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " config) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// hook 运行之前..." })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 处理下一个中间件，如果这是最后一个，则处理 `useSWR` hook。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "swr" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRNext" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " config)" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// hook 运行之后..." })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " swr" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsxs)(e.p, { children: ["你可以将一个中间件数组作为选项传递给 ", (0, n.jsx)(e.code, { children: "SWRConfig" }), " 或 ", (0, n.jsx)(e.code, { children: "useSWR" }), "："] }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "<" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "value" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{{ use" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [myMiddleware] }}>" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "// 或..." }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "useSWR(key, fetcher, { use: [myMiddleware] })" }) })] }) }), "\n", (0, n.jsx)(e.h3, { id: "extend", children: "扩展" }), "\n", (0, n.jsx)(e.p, { children: "中间件会像常规选项一样进行扩展。例如：" }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Bar" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { use" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [c] })" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ..." })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Foo" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "value" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{{ use" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [a] }}>" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "value" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{{ use" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [b] }}>" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Bar" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "/>" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      </" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  )" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsx)(e.p, { children: "相当于：" }), "\n", (0, n.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsx)(e.code, { "data-language": "js", "data-theme": "default", children: (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { use" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [a" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " b" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " c] })" })] }) }) }), "\n", (0, n.jsx)(e.h3, { id: "multiple-middleware", children: "多个中间件" }), "\n", (0, n.jsx)(e.p, { children: "每个中间件包装下一个中间件，最后一个只包装 SWR hook。例如：" }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsx)(e.code, { "data-language": "jsx", "data-theme": "default", children: (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { use" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [a" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " b" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " c] })" })] }) }) }), "\n", (0, n.jsxs)(e.p, { children: ["中间件执行的顺序是 ", (0, n.jsx)(e.code, { children: "a → b → c" }), "，如下所示："] }), "\n", (0, n.jsx)(e.pre, { "data-language": "plaintext", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "plaintext", "data-theme": "default", children: [(0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "enter a" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  enter b" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    enter c" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      useSWR()" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    exit  c" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  exit  b" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "exit  a" }) })] }) }), "\n", (0, n.jsx)(e.h2, { id: "examples", children: "示例" }), "\n", (0, n.jsx)(e.h3, { id: "request-logger", children: "请求日志记录器" }), "\n", (0, n.jsxs)(e.p, { children: ["我们以构建一个简单的请求日志记录器中间件为例。它打印出从这个 SWR hook 发送的所有 fetcher 请求。你也可以将这个中间件添加到 ", (0, n.jsx)(e.code, { children: "SWRConfig" }), " 中，以用于所有的 SWR hook。"] }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "logger" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(useSWRNext) {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " config) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 将日志记录器添加到原始 fetcher。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "extendedFetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "args) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "console" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".log" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'SWR Request:'" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " key)" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "args)" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    }" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 使用新的 fetcher 执行 hook。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRNext" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " extendedFetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " config)" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ... 在你的组件里使用" }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { use" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [logger] })" })] })] }) }), "\n", (0, n.jsx)(e.p, { children: "每次触发请求时，它都会将 SWR key 输出到控制台：" }), "\n", (0, n.jsx)(e.pre, { "data-language": "plaintext", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "plaintext", "data-theme": "default", children: [(0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "SWR Request: /api/user1" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "SWR Request: /api/user2" }) })] }) }), "\n", (0, n.jsx)(e.h3, { id: "keep-previous-result", children: "保留之前的结果" }), "\n", (0, n.jsxs)(e.p, { children: ["有时你希望 ", (0, n.jsx)(e.code, { children: "useSWR" }), " 返回的数据“延迟”。即使 key 发生了变化，你仍然希望它返回之前的结果，直到新数据加载完毕。"] }), "\n", (0, n.jsxs)(e.p, { children: ["这可以与 ", (0, n.jsx)(e.code, { children: "useRef" }), " 一起构建一个延迟中间件。在这个例子中，我们还将扩展 ", (0, n.jsx)(e.code, { children: "useSWR" }), " hook 的返回对象："] }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { useRef" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useEffect" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useCallback } " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'react'" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 这是一个 SWR 中间件，用于在 key 发生变化时保留数据。" }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "laggy" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(useSWRNext) {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " config) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 使用 ref 来存储之前返回的数据。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "laggyDataRef" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useRef" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 实际的 SWR hook。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "swr" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRNext" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " config)" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useEffect" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(() " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 如果数据不是 undefined，更新 ref。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "swr" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".data " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!==" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "laggyDataRef" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".current " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "swr" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".data" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      }" }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    }" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "swr" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".data])" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 暴露一个方法来清除延迟的数据（如果有）。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "resetLaggy" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useCallback" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(() " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "laggyDataRef" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".current " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    }" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [])" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 如果当前数据是 undefined，则回退到之前的数据。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "dataOrLaggyData" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "swr" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".data " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "===" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "laggyDataRef" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".current " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "swr" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".data" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 是否显示之前的数据？" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isLagging" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "swr" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".data " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "===" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "&&" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "laggyDataRef" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".current " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!==" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 同时将 `isLagging` 字段添加到 SWR 中。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Object" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".assign" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "({}" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " swr" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " dataOrLaggyData" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      isLagging" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      resetLaggy" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    })" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsx)(e.p, { children: "当你需要一个 SWR hook 延迟时，你可以使用这个中间件：" }), "\n", (0, n.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsx)(e.code, { "data-language": "js", "data-theme": "default", children: (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isLagging" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "resetLaggy" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { use" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [laggy] })" })] }) }) }), "\n", (0, n.jsx)(e.h3, { id: "serialize-object-keys", children: "序列化对象 key" }), "\n", (0, n.jsx)(i.UW, { children: (0, n.jsx)(e.p, { children: "从 SWR 1.1.0 开始，object 类型的 keys 可以在内部自动被序列化。" }) }), "\n", (0, n.jsx)(i.UW, { emoji: "⚠️", children: (0, n.jsxs)(e.p, { children: ["在旧版本(< 1.1.0)中，SWR 会", (0, n.jsx)(e.strong, { children: "浅" }), "比较每次渲染时的参数，如果其中任何一个发生了变化，就会触发重新验证。\n如果你只是传入可序列化的对象作为 key。你可以序列化对象 key 以确保其稳定性，一个简单的中间件可以帮助你："] }) }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "serialize" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(useSWRNext) {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " config) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 序列化 key。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "serializedKey" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Array" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".isArray" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "JSON" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".stringify" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " key" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 传递序列化的 key，并在 fetcher 中将其反序列化。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRNext" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(serializedKey" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (k) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "JSON" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".parse" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(k))" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " config)" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ..." }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "([" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { id" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'73'" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }]" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { use" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [serialize] })" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ...或全局启用" }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "<" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "value" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{{ use" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [serialize] }}>" })] })] }) }), "\n", (0, n.jsx)(e.p, { children: "你无需担心对象在渲染期间可能会发生变化。它总是被序列化为相同的字符串，并且 fetcher 仍将接收这些对象参数。" }), "\n", (0, n.jsx)(i.UW, { children: (0, n.jsxs)(e.p, { children: ["此外，你还可以使用 ", (0, n.jsx)(e.a, { href: "https://github.com/epoberezkin/fast-json-stable-stringify", children: "fast-json-stable-stringify" }), " 之类的库代替 ", (0, n.jsx)(e.code, { children: "JSON.stringify" }), " — 更快更稳定。"] }) })] }) } e.default = (0, r.j)({ MDXContent: function () { let s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e } = Object.assign({}, (0, o.a)(), s.components); return e ? (0, n.jsx)(e, { ...s, children: (0, n.jsx)(t, { ...s }) }) : t(s) }, pageOpts: { filePath: "pages/docs/middleware.mdx.html", route: "/docs/middleware.html", title: "中间件", headings: c }, pageNextRoute: "/docs/middleware.html" }) } }, function (s) { s.O(0, [17, 888, 774, 179], function () { return s(s.s = 8918) }), _N_E = s.O() }])