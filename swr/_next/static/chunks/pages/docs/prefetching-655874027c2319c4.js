(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[399], { 6676: function (s, e, r) { (window.__NEXT_P = window.__NEXT_P || []).push(["/docs/prefetching.html", function () { return r(8831) }]) }, 8831: function (s, e, r) { "use strict"; r.r(e), r.d(e, { __toc: function () { return i } }); var l = r(2676), o = r(3017), n = r(6952); let i = [{ depth: 2, value: "顶级页面数据", id: "top-level-page-data" }, { depth: 2, value: "手动预请求", id: "programmatically-prefetch" }, { depth: 2, value: "数据预填充", id: "pre-fill-data" }]; function c (s) { let e = Object.assign({ h1: "h1", h2: "h2", p: "p", a: "a", code: "code", pre: "pre", span: "span" }, (0, n.a)(), s.components); return (0, l.jsxs)(l.Fragment, { children: [(0, l.jsx)(e.h1, { children: "预请求数据" }), "\n", (0, l.jsx)(e.h2, { id: "top-level-page-data", children: "顶级页面数据" }), "\n", (0, l.jsxs)(e.p, { children: ["有很多方法可以为 SWR 预请求数据。对于顶级请求，强烈推荐 ", (0, l.jsx)(e.a, { href: "https://developer.mozilla.org/en-US/docs/Web/HTML/Preloading_content.html", children: (0, l.jsx)(e.code, { children: 'rel="preload"' }) })] }), "\n", (0, l.jsx)(e.pre, { "data-language": "html", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsx)(e.code, { "data-language": "html", "data-theme": "default", children: (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "<" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "link" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "rel" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"preload"' }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "href" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"/api/data"' }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "as" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"fetch"' }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "crossorigin" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"anonymous"' }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }) }) }), "\n", (0, l.jsxs)(e.p, { children: ["只需把它放在HTML的 ", (0, l.jsx)(e.code, { children: "<head>" }), " 里即可。简单、快速、原生。"] }), "\n", (0, l.jsx)(e.p, { children: "它将在 HTML 加载时预请求数据，甚至是在 JavaScript 开始下载之前。使用相同 URL 的所有传入 fetch 请求都将重用结果(当然包括SWR)。" }), "\n", (0, l.jsx)(e.h2, { id: "programmatically-prefetch", children: "手动预请求" }), "\n", (0, l.jsxs)(e.p, { children: ["SWR 提供 ", (0, l.jsx)(e.code, { children: "preload" }), " API 来以编程方式预加载资源并将结果存储在缓存中。", (0, l.jsx)(e.code, { children: "preload" }), " 接受 ", (0, l.jsx)(e.code, { children: "key" }), " 和 ", (0, l.jsx)(e.code, { children: "fetcher" }), " 作为参数。"] }), "\n", (0, l.jsxs)(e.p, { children: ["你甚至可以在React之外调用 ", (0, l.jsx)(e.code, { children: "preload" }), "。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { useState } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'react'" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { preload } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetcher" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (url) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetch" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(url)" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".then" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "((res) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "res" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".json" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "())" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 在渲染下面的用户组件之前预加载资源，" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 这可以防止应用程序中出现潜在的网络请求瀑布。" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 您也可以在鼠标悬停在按钮或链接上时开始预加载。" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "preload" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "User" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "export" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "default" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "show" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setShow" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "] " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useState" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "false" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setShow" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")}>Show User</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      {show " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "User" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " /> " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  )" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["在 React 渲染树中，", (0, l.jsx)(e.code, { children: "preload" }), "也可以在事件处理或 effects 中使用。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "({ userId }) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "show" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setShow" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "] " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useState" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "false" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 在 effects 中预加载" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useEffect" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(() " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "preload" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user?id='" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " userId" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [userId])" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setShow" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")}" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        {" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "/* 在事件回调中预加载 */" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onHover" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "preload" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user?id='" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " userId" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)}" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      >" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        Show User" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      {show " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "User" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " /> " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  )" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["配合 Next.js 的 ", (0, l.jsx)(e.a, { href: "https://nextjs.org/docs/api-reference/next/router#routerprefetch.html", children: "页面预加载" }), "，你将能立即加载下一页和数据。"] }), "\n", (0, l.jsxs)(e.p, { children: ["在 Suspense 模式下，你应该利用", (0, l.jsx)(e.code, { children: "preload" }), "来避免网络请求瀑布问题。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { preload } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 在渲染前执行" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "preload" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher);" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "preload" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/movies'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher);" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Page" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 下面的 useSWR 钩子会暂停渲染，但是对 `/api/user` 和 `/api/movies` 的请求已经由 `preload` 启动，" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 因此不会出现网络请求瀑布。" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { data: " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { suspense" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " });" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { data: " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "movies" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/movies'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { suspense" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " });" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "User" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{user} />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Movies" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "movies" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{movies} />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  );" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsx)(e.h2, { id: "pre-fill-data", children: "数据预填充" }), "\n", (0, l.jsxs)(e.p, { children: ["如果你想在 SWR 缓存中预填充已经存在的数据，你可以使用 ", (0, l.jsx)(e.code, { children: "fallbackData" }), " 选项，例如："] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsx)(e.code, { "data-language": "jsx", "data-theme": "default", children: (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/data'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { fallbackData" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " prefetchedData })" })] }) }) }), "\n", (0, l.jsxs)(e.p, { children: ["当 SWR 还没有获取此次数据的时候， 这个 hook 将返回 ", (0, l.jsx)(e.code, { children: "prefetchedData" }), " 作为 fallback 。"] }), "\n", (0, l.jsxs)(e.p, { children: ["你也可以为所有的 SWR hooks 和不同的 key 配置 ", (0, l.jsx)(e.code, { children: "<SWRConfig>" }), " 和它的 ", (0, l.jsx)(e.code, { children: "fallback" }), " 选项。 查看 ", (0, l.jsx)(e.a, { href: "/docs/with-nextjs.html", children: "Next.js SSG 和 SSR" }), " 了解更多详细信息。"] })] }) } e.default = (0, o.j)({ MDXContent: function () { let s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e } = Object.assign({}, (0, n.a)(), s.components); return e ? (0, l.jsx)(e, { ...s, children: (0, l.jsx)(c, { ...s }) }) : c(s) }, pageOpts: { filePath: "pages/docs/prefetching.mdx.html", route: "/docs/prefetching.html", title: "预请求数据", headings: i }, pageNextRoute: "/docs/prefetching.html" }) } }, function (s) { s.O(0, [17, 888, 774, 179], function () { return s(s.s = 6676) }), _N_E = s.O() }])