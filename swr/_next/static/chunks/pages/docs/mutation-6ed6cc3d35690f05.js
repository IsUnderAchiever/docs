(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[445], { 2835: function (s, e, r) { (window.__NEXT_P = window.__NEXT_P || []).push(["/docs/mutation.html", function () { return r(5660) }]) }, 5660: function (s, e, r) { "use strict"; r.r(e), r.d(e, { __toc: function () { return t } }); var l = r(2676), o = r(3017), n = r(6952), i = r(4894); let t = [{ depth: 2, value: "mutate", id: "mutate" }, { depth: 4, value: "全局数据更改", id: "global-mutate" }, { depth: 4, value: "绑定数据更改", id: "bound-mutate" }, { depth: 4, value: "重新验证", id: "revalidation" }, { depth: 3, value: "API", id: "api" }, { depth: 4, value: "Parameters", id: "parameters" }, { depth: 4, value: "返回值", id: "return-values" }, { depth: 2, value: "useSWRMutation", id: "useswrmutation" }, { depth: 3, value: "API", id: "useswrmutation-api" }, { depth: 4, value: "参数", id: "useswrmutation-parameters" }, { depth: 4, value: "返回值", id: "useswrmutation-return-values" }, { depth: 3, value: "基本用法", id: "useswrmutation-basic-usage" }, { depth: 3, value: "延迟加载数据，直到需要的时候", id: "defer-loading-data-until-needed" }, { depth: 2, value: "乐观更新", id: "optimistic-updates" }, { depth: 2, value: "错误回滚", id: "rollback-on-errors" }, { depth: 2, value: "在数据更改后更新缓存", id: "update-cache-after-mutation" }, { depth: 2, value: "避免竞态条件", id: "avoid-race-conditions" }, { depth: 2, value: "基于当前数据进行数据更改", id: "mutate-based-on-current-data" }, { depth: 2, value: "更改多项数据", id: "mutate-multiple-items" }]; function c (s) { let e = Object.assign({ h1: "h1", p: "p", code: "code", h2: "h2", h4: "h4", a: "a", pre: "pre", span: "span", h3: "h3", ul: "ul", li: "li", blockquote: "blockquote", strong: "strong" }, (0, n.a)(), s.components); return (0, l.jsxs)(l.Fragment, { children: [(0, l.jsx)(e.h1, { children: "数据更改 & 重新验证" }), "\n", (0, l.jsxs)(e.p, { children: ["SWR 提供了 ", (0, l.jsx)(e.code, { children: "mutate" }), " 和 ", (0, l.jsx)(e.code, { children: "useSWRMutation" }), " 两个 API 用于更改远程数据及相关缓存。"] }), "\n", (0, l.jsx)(e.h2, { id: "mutate", children: (0, l.jsx)(e.code, { children: "mutate" }) }), "\n", (0, l.jsxs)(e.p, { children: ["有两种方法可以使用 ", (0, l.jsx)(e.code, { children: "mutate" }), " API 来进行数据更改，全局数据更改 API 可以更改任何 key 的数据，而绑定数据更改只能更改对应 SWR hook 的数据。"] }), "\n", (0, l.jsx)(e.h4, { id: "global-mutate", children: "全局数据更改" }), "\n", (0, l.jsxs)(e.p, { children: ["推荐使用 ", (0, l.jsx)(e.a, { href: "/docs/global-configuration#access-to-global-configurations.html", children: (0, l.jsx)(e.code, { children: "useSWRConfig" }) }), " hook 获取全局 ", (0, l.jsx)(e.code, { children: "mutator" }), "："] }), "\n", (0, l.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "js", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { useSWRConfig } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"swr"' })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRConfig" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " options)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsx)(e.p, { children: "你也可以全局引入它：" }), "\n", (0, l.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "js", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { mutate } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"swr"' })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " options)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsx)(i.UW, { emoji: "⚠️", children: (0, l.jsx)(e.p, { children: "如果在调用全局 mutator 函数时只提供了 key 参数，那么除非有一个使用相同 key 的 SWR hook 被挂载，否则缓存不会被更新，也不会触发重新验证。" }) }), "\n", (0, l.jsx)(e.h4, { id: "bound-mutate", children: "绑定数据更改" }), "\n", (0, l.jsxs)(e.p, { children: ["绑定数据更改可以更便捷的更改当前 key 数据，它的 ", (0, l.jsx)(e.code, { children: "key" }), " 与传递给 ", (0, l.jsx)(e.code, { children: "useSWR" }), " 的 ", (0, l.jsx)(e.code, { children: "key" }), " 相绑定，并接收 ", (0, l.jsx)(e.code, { children: "data" }), " 作为第一个参数。"] }), "\n", (0, l.jsxs)(e.p, { children: ["它在功能上等同于上文提到的的全局 ", (0, l.jsx)(e.code, { children: "mutate" }), " 函数，但它不需要传入 ", (0, l.jsx)(e.code, { children: "key" }), " 参数："] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWR " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Profile" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">My name is {" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}.</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "async" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "newName" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "name" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".toUpperCase" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 发送请求给 API 以更新数据" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "await" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "requestUpdateUsername" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(newName)" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 立即更新并重新验证本地数据（重新请求）" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 注意： 当使用 useSWR 的 mutate 时，key 并不是必须的，因为它已经预先绑定了。" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "({ " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " name" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " newName })" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      }}>Uppercase my name!</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  )" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsx)(e.h4, { id: "revalidation", children: "重新验证" }), "\n", (0, l.jsxs)(e.p, { children: ["当你调用 ", (0, l.jsx)(e.code, { children: "mutate(key)" }), "（或者只是使用绑定数据更改 API ", (0, l.jsx)(e.code, { children: "mutate()" }), "）时没有传入任何数据，它会触发资源的重新验证(将数据标记为已过期并触发重新请求)。这个例子展示了当用户点击 “Logout” 按钮时如何自动重新请求登陆信息。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { useSWRConfig } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRConfig" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Profile" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 设置 cookie 为已过期" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "document" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".cookie " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 通知所有拥有这个 key SWR 重新验证" })] }), "\n", (0, l.jsxs)(e.span, { className: "line highlighted", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      }}>" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        Logout" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  )" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", "\n", (0, l.jsx)(i.UW, { children: (0, l.jsxs)(e.p, { children: ["它向同一个 ", (0, l.jsx)(e.a, { href: "/docs/advanced/cache.html", children: "缓存 provider" }), " 范围内的 SWR hook 进行广播。如果不存在缓存 provider 就会向 SWR hook 进行广播。"] }) }), "\n", (0, l.jsx)(e.h3, { id: "api", children: "API" }), "\n", (0, l.jsx)(e.h4, { id: "parameters", children: "Parameters" }), "\n", (0, l.jsxs)(e.ul, { children: ["\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "key" }), "：与 ", (0, l.jsx)(e.code, { children: "useSWR" }), " 的 ", (0, l.jsx)(e.code, { children: "key" }), " 相同，但函数表现为一个 ", (0, l.jsx)(e.a, { href: "/docs/mutation#mutate-multiple-items.html", children: "过滤函数" }), "。"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "data" }), "：用于更新客户端缓存的数据，或者是一个用于进行远程数据更改的异步函数。"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "options" }), "：接受下列选项", "\n", (0, l.jsxs)(e.ul, { children: ["\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "optimisticData" }), "：用于立即更新客户端缓存的数据，或是一个接受当前数据并返回新的客户端缓存数据的函数，通常用于乐观 UI。"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "revalidate = true" }), ": 异步更新完成后是否应该重新验证缓存。如果设置为函数，该函数将接收 ", (0, l.jsx)(e.code, { children: "data" }), " 和 ", (0, l.jsx)(e.code, { children: "key" }), " 作为参数。"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "populateCache = true" }), "：将远程数据更改的结果写入缓存，或者将接收新结果和当前结果作为参数并返回数据更改结果的函数。"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "rollbackOnError = true" }), "：如果远程数据更改失败，缓存会回滚。或者接受一个函数，它接收从 fetcher 抛出的错误作为参数，并返回一个布尔值判断是否应该回滚。"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "throwOnError = true" }), "：数据更改失败时抛出错误。"] }), "\n"] }), "\n"] }), "\n"] }), "\n", (0, l.jsx)(e.h4, { id: "return-values", children: "返回值" }), "\n", (0, l.jsxs)(e.p, { children: [(0, l.jsx)(e.code, { children: "mutate" }), " 返回参数的 ", (0, l.jsx)(e.code, { children: "data" }), " 是被解析过的结果。传递给 ", (0, l.jsx)(e.code, { children: "mutate" }), " 的函数将返回一个更新后的数据，用于更新相应的缓存值。如果在执行函数时出现错误，错误将被抛出，以便进行合适的处理。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "try" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "await" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "updateUser" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(newUser))" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "} " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "catch" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (error) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 处理更新用户时出现的错误" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsx)(e.h2, { id: "useswrmutation", children: (0, l.jsx)(e.code, { children: "useSWRMutation" }) }), "\n", (0, l.jsxs)(e.p, { children: ["SWR 还提供了 ", (0, l.jsx)(e.code, { children: "useSWRMutation" }), " 作为一个远程数据更改的 hook。远程数据更改只能手动触发，而不像 ", (0, l.jsx)(e.code, { children: "useSWR" }), " 那样会自动触发。"] }), "\n", (0, l.jsxs)(e.p, { children: ["另外，这个 hook 不会与其他 ", (0, l.jsx)(e.code, { children: "useSWRMutation" }), " hook 共享状态。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "tsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "tsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWRMutation " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr/mutation'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 实现 fetcher" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 额外的参数可以通过第二个参数 `arg` 传入" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 在下例中，`arg` 为 `'my_token'`" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "async" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "updateUser" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(url" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { arg }" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { arg" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "string" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "await" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetch" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(url" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    method" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'POST'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    headers" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      Authorization" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`Bearer " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "${" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "arg" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "}" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    }" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  })" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Profile" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 一个类似 useSWR + mutate 的 API，但是它不会自动发送请求" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRMutation" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " updateUser" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " options)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 以特定参数触发 `updateUser` 函数" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'my_token'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }}>Update User</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsx)(e.h3, { id: "useswrmutation-api", children: "API" }), "\n", (0, l.jsx)(e.h4, { id: "useswrmutation-parameters", children: "参数" }), "\n", (0, l.jsxs)(e.ul, { children: ["\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "key" }), ": 与 ", (0, l.jsx)(e.a, { href: "/docs/mutation#mutate.html", children: (0, l.jsx)(e.code, { children: "mutate" }) }), " 的 ", (0, l.jsx)(e.code, { children: "key" }), " 相同"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "fetcher(key, { arg })" }), "：一个用于远程数据更改的异步函数"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "options" }), "：一个可选的对象，包含了下列属性：", "\n", (0, l.jsxs)(e.ul, { children: ["\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "optimisticData" }), "：与 ", (0, l.jsx)(e.code, { children: "mutate" }), " 的 ", (0, l.jsx)(e.code, { children: "optimisticData" }), " 相同"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "revalidate = true" }), "：与 ", (0, l.jsx)(e.code, { children: "mutate" }), " 的 ", (0, l.jsx)(e.code, { children: "revalidate" }), " 相同"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "populateCache = false" }), "：与 ", (0, l.jsx)(e.code, { children: "mutate" }), "' 的 ", (0, l.jsx)(e.code, { children: "populateCache" }), " 相同 ，但默认值为 ", (0, l.jsx)(e.code, { children: "false" })] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "rollbackOnError = true" }), "：与 ", (0, l.jsx)(e.code, { children: "mutate" }), " 的 ", (0, l.jsx)(e.code, { children: "rollbackOnError" }), " 相同"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "throwOnError = true" }), "： 与 ", (0, l.jsx)(e.code, { children: "mutate" }), "' 的 ", (0, l.jsx)(e.code, { children: "throwOnError" }), " 相同"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "onSuccess(data, key, config)" }), ":　远程数据更改完成时的回调函数"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "onError(err, key, config)" }), ": 远程数据更改返回错误时的回调函数"] }), "\n"] }), "\n"] }), "\n"] }), "\n", (0, l.jsx)(e.h4, { id: "useswrmutation-return-values", children: "返回值" }), "\n", (0, l.jsxs)(e.ul, { children: ["\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "data" }), "：从 ", (0, l.jsx)(e.code, { children: "fetcher" }), " 返回给定 key 的数据"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "error" }), "：", (0, l.jsx)(e.code, { children: "fetcher" }), " 中抛出的错误（或 undefined）"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "trigger(arg, options)" }), "：一个用于触发远程数据更改的函数"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "reset" }), "：一个用于重置状态的函数（ ", (0, l.jsx)(e.code, { children: "data" }), ", ", (0, l.jsx)(e.code, { children: "error" }), ", ", (0, l.jsx)(e.code, { children: "isMutating" }), " ）"] }), "\n", (0, l.jsxs)(e.li, { children: [(0, l.jsx)(e.code, { children: "isMutating" }), "：有一个正在进行中的远程数据变更"] }), "\n"] }), "\n", (0, l.jsx)(e.h3, { id: "useswrmutation-basic-usage", children: "基本用法" }), "\n", (0, l.jsx)(e.pre, { "data-language": "tsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "tsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWRMutation " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr/mutation'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "async" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "sendRequest" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(url" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { arg }" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { arg" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { username" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "string" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }}) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetch" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(url" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    method" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'POST'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    body" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "JSON" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".stringify" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(arg)" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  })" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".then" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(res " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "res" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".json" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "())" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isMutating" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRMutation" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " sendRequest" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "/* options */" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "disabled" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{isMutating}" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "async" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "try" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "          " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "result" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "await" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "({ username" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'johndoe'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "/* options */" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "catch" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (e) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "          " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 错误处理" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        }" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      }}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    >" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      Create User" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  )" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["如果你想在渲染时使用数据更改的结果，你可以从 ", (0, l.jsx)(e.code, { children: "useSWRMutation" }), " 的返回值中获得它。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsx)(e.code, { "data-language": "jsx", "data-theme": "default", children: (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRMutation" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " sendRequest)" })] }) }) }), "\n", (0, l.jsxs)(e.p, { children: [(0, l.jsx)(e.code, { children: "useSWRMutation" }), " 与 ", (0, l.jsx)(e.code, { children: "useSWR" }), " 共享一个缓存空间，所以它可以检测并避免 ", (0, l.jsx)(e.code, { children: "useSWR" }), " 间的竞态条件。它还支持 ", (0, l.jsx)(e.code, { children: "mutate" }), " 的功能，如乐观更新和错误回滚。你可以将这些选项传入 ", (0, l.jsx)(e.code, { children: "useSWRMutation" }), " 和它的 ", (0, l.jsx)(e.code, { children: "trigger" }), " 函数。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRMutation" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " updateUser" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "optimisticData" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " current " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " ({ " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "current" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " name" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " newName })" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "})" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 或者" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(newName" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "optimisticData" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " current " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " ({ " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "current" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " name" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " newName })" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "})" }) })] }) }), "\n", (0, l.jsx)(e.h3, { id: "defer-loading-data-until-needed", children: "延迟加载数据，直到需要的时候" }), "\n", (0, l.jsxs)(e.p, { children: ["你也可以使用 ", (0, l.jsx)(e.code, { children: "useSWRMutation" }), " 来加载数据。", (0, l.jsx)(e.code, { children: "useSWRMutation" }), " 在 ", (0, l.jsx)(e.code, { children: "trigger" }), " 被调用之前永远不会开始请求，所以你可以推迟到真正需要时再加载数据。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { useState } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'react'" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWRMutation " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr/mutation'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetcher" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " url " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetch" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(url)" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".then" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(res " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "res" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".json" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "())" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Page" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "show" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setShow" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "] " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useState" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "false" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 直到 trigger 被调用前，data 都为 undefined" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { data: " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRMutation" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher);" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "();" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setShow" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ");" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      }}>Show User</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      {show " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "&&" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " user " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">{" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "> " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  );" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsx)(e.h2, { id: "optimistic-updates", children: "乐观更新" }), "\n", (0, l.jsx)(e.p, { children: "很多情况下，应用本地的数据更改是一个让人感觉快速的好方法——不需要等待远程数据源。" }), "\n", (0, l.jsxs)(e.p, { children: ["使用 ", (0, l.jsx)(e.code, { children: "optimisticData" }), " 选项，你可以手动更新你的本地数据，同时等待远程数据更改的完成。搭配 ", (0, l.jsx)(e.code, { children: "rollbackOnError" }), " 使用，你还可以控制何时回滚数据。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { useSWRConfig } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Profile" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRConfig" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">My name is {" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}.</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "async" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "newName" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "name" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".toUpperCase" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " name" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " newName }" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "options" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "          optimisticData" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "          " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "rollbackOnError" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(error) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "            " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 如果超时中止请求的错误，不执行回滚" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "            " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!==" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'AbortError'" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "          }" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        }" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 立即更新本地数据" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 发送一个请求以更新数据" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 触发重新验证（重新请求）确保本地数据正确" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "updateFn" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(user)" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " options);" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      }}>Uppercase my name!</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  )" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsxs)(e.blockquote, { children: ["\n", (0, l.jsxs)(e.p, { children: [(0, l.jsx)(e.strong, { children: (0, l.jsx)(e.code, { children: "updateFn" }) }), " 应该是一个 promise 或者异步函数以处理远程数据更改，它应该返回更新后的数据。"] }), "\n"] }), "\n", (0, l.jsxs)(e.p, { children: ["你也可以为 ", (0, l.jsx)(e.code, { children: "optimisticData" }), " 传入一个函数使其可以获取当前数据："] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { useSWRConfig } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Profile" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRConfig" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">My name is {" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}.</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "async" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "newName" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "name" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".toUpperCase" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "updateUserName" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(newName)" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "          " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "optimisticData" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " user " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " ({ " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " name" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " newName })" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "          rollbackOnError" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        });" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      }}>Uppercase my name!</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  )" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["你还可以通过 ", (0, l.jsx)(e.code, { children: "useSWRMutation" }), " 和 ", (0, l.jsx)(e.code, { children: "trigger" }), " 实现相同的功能："] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWRMutation " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr/mutation'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Profile" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRMutation" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " updateUserName)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">My name is {" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}.</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "async" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "newName" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "name" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".toUpperCase" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(newName" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "          " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "optimisticData" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " user " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " ({ " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " name" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " newName })" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "          rollbackOnError" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        })" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      }}>Uppercase my name!</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  )" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsx)(e.h2, { id: "rollback-on-errors", children: "错误回滚" }), "\n", (0, l.jsxs)(e.p, { children: ["当你设置了", (0, l.jsx)(e.code, { children: "optimisticData" }), " 选项时，有可能在乐观数据展示给用户后，远程数据更改却失败了。在这种情况下，你可以启用", (0, l.jsx)(e.code, { children: "rollbackOnError" }), "，将本地缓存恢复到之前的状态，确保用户看到的是正确的数据。"] }), "\n", (0, l.jsx)(e.h2, { id: "update-cache-after-mutation", children: "在数据更改后更新缓存" }), "\n", (0, l.jsxs)(e.p, { children: ["有时远程数据更改的请求会直接返回更新后的数据，因此不需要发送额外的请求来加载它。\n你可以启用 ", (0, l.jsx)(e.code, { children: "populateCache" }), " 选项，用数据更改的响应来更新 ", (0, l.jsx)(e.code, { children: "useSWR" }), " 的缓存。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "updateTodo" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetch" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/todos/1'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  method" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'PATCH'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  body" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "JSON" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".stringify" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "({ completed" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " })" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "})" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/todos'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " updateTodo" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "populateCache" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (updatedTodo" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " todos) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "   " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 过滤列表并返回更新后的待办项" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "filteredTodos" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "todos" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".filter" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(todo " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "todo" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".id " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!==" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'1'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "filteredTodos" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " updatedTodo]" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 因为 API 已经给了我们更新后的数据，所以我们不需要重新请求验证它。" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  revalidate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "false" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "})" }) })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["或使用 ", (0, l.jsx)(e.code, { children: "useSWRMutation" }), " hook："] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRMutation" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/todos'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " updateTodo" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "populateCache" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (updatedTodo" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " todos) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 过滤列表并返回更新后的待办项" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "filteredTodos" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "todos" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".filter" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(todo " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "todo" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".id " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!==" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'1'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "filteredTodos" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " updatedTodo]" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 因为 API 已经给了我们更新后的数据，所以我们不需要重新请求验证它。" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  revalidate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "false" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "})" }) })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["当 ", (0, l.jsx)(e.code, { children: "optimisticData" }), " 与 ", (0, l.jsx)(e.code, { children: "rollbackOnError" }), " 搭配使用时，你将获得最佳的乐观 UI 体验。"] }), "\n", (0, l.jsx)(e.h2, { id: "avoid-race-conditions", children: "避免竞态条件" }), "\n", (0, l.jsxs)(e.p, { children: [(0, l.jsx)(e.code, { children: "mutate" }), " 和 ", (0, l.jsx)(e.code, { children: "useSWRMutation" }), " 都可以避免 ", (0, l.jsx)(e.code, { children: "useSWR" }), " 之间的竞态条件。例如："] }), "\n", (0, l.jsx)(e.pre, { "data-language": "tsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "tsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Profile" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " getUser" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { revalidateInterval" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "3000" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " })" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRMutation" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " updateUser)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <>" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    {data " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".username " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "trigger" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()}>Update User</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </>" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["正常情况下 ", (0, l.jsx)(e.code, { children: "useSWR" }), " hook 可能会因为聚焦，轮询或者其他条件在任何时间刷新，这使得展示的 username 尽可能是最新的。然而，由于我们在", (0, l.jsx)(e.code, { children: "useSWR" }), " 的刷新过程中几乎同时发生了一个数据更改，可能会出现 ", (0, l.jsx)(e.code, { children: "getUser" }), " 请求更早开始，但是花的时间比 ", (0, l.jsx)(e.code, { children: "updateUser" }), " 更长，导致竞态情况。"] }), "\n", (0, l.jsxs)(e.p, { children: ["幸运的是 ", (0, l.jsx)(e.code, { children: "useSWRMutation" }), " 可以为你自动处理这种情况。在数据更改后，它会告诉 ", (0, l.jsx)(e.code, { children: "useSWR" }), " 放弃正在进行的请求和重新验证，所以旧的数据永远不会被显示。"] }), "\n", (0, l.jsx)(e.h2, { id: "mutate-based-on-current-data", children: "基于当前数据进行数据更改" }), "\n", (0, l.jsx)(e.p, { children: "有时你想根据当前的数据来更新部分数据。" }), "\n", (0, l.jsxs)(e.p, { children: ["通过 ", (0, l.jsx)(e.code, { children: "mutate" }), "，你可以传入一个接收当前缓存值的异步函数，如果有的话，并返回一个更新的文档。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/todos'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "async" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " todos " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 让我们将 ID 为 `1` 的待办事项更新为已完成" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "updatedTodo" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "await" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetch" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/todos/1'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    method" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'PATCH'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    body" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "JSON" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".stringify" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "({ completed" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " })" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  })" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 过滤列表并返回更新后的待办项" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "filteredTodos" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "todos" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".filter" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(todo " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "todo" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".id " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!==" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'1'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "filteredTodos" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " updatedTodo]" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 因为 API 已经给了我们更新后的信息，所以我们不需要去重新验证它。" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { revalidate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "false" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " })" })] })] }) }), "\n", (0, l.jsx)(e.h2, { id: "mutate-multiple-items", children: "更改多项数据" }), "\n", (0, l.jsxs)(e.p, { children: ["全局 ", (0, l.jsx)(e.code, { children: "mutate" }), " API 接受一个过滤函数，它接受 ", (0, l.jsx)(e.code, { children: "key" }), " 作为参数并返回需要重新验证的 key。过滤函数会被应用于所有已有的缓存 key。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { mutate } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr'" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 如果你自定义了缓存 provider，也可以从 hook 上获取。" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// { mutate } = useSWRConfig()" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  key " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "typeof" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " key " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "===" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'string'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "&&" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "key" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".startsWith" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/item?id='" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  { revalidate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" }) })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["这同时适用于如数组等任何类型的 key 。这个数据更改会匹配所有第一个元素为 ", (0, l.jsx)(e.code, { children: "'item'" }), " 的 key。"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "([" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'item'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "123" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "]" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "([" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'item'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "124" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "]" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "([" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'item'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "125" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "]" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  key " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Array" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".isArray" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(key) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "&&" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " key[" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "0" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "] " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "===" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'item'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  { revalidate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "false" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" }) })] }) }), "\n", (0, l.jsx)(e.p, { children: "过滤函数应用于所有现有的缓存 key，所以当使用多种类型的 key 时，你不应该假设 key 的类型。" }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ✅ 匹配的数组 key 值" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "((key) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " key[" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "0" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "]" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".startsWith" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " data)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ✅ 匹配字符串 key 值" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "((key) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "typeof" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " key " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "===" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'string'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "&&" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "key" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".startsWith" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api'" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " data)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ❌ ERROR: 更改不确定类型的 key 的数据 (array 或 string)" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "((key" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "any" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: " /\\/api/" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".test" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "key" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".toString" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()))" })] })] }) }), "\n", (0, l.jsx)(e.p, { children: "你可以使用过滤函数来清除所有的缓存数据，这在退出登陆时很有用：" }), "\n", (0, l.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "js", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "clearCache" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  () " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "undefined" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  { revalidate" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "false" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ...退出登陆时清除所有缓存" }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "clearCache" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] })] }) })] }) } e.default = (0, o.j)({ MDXContent: function () { let s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e } = Object.assign({}, (0, n.a)(), s.components); return e ? (0, l.jsx)(e, { ...s, children: (0, l.jsx)(c, { ...s }) }) : c(s) }, pageOpts: { filePath: "pages/docs/mutation.mdx.html", route: "/docs/mutation.html", title: "数据更改 & 重新验证", headings: t }, pageNextRoute: "/docs/mutation.html" }) } }, function (s) { s.O(0, [17, 888, 774, 179], function () { return s(s.s = 2835) }), _N_E = s.O() }])