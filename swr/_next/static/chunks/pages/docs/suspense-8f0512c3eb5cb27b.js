(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[130], { 9156: function (s, e, n) { (window.__NEXT_P = window.__NEXT_P || []).push(["/docs/suspense.html", function () { return n(7168) }]) }, 7168: function (s, e, n) { "use strict"; n.r(e), n.d(e, { __toc: function () { return c } }); var r = n(2676), l = n(3017), o = n(6952), i = n(4894); let c = [{ depth: 3, value: "注意：使用条件请求", id: "note-with-conditional-fetching" }, { depth: 3, value: "服务端渲染", id: "server-side-rendering" }]; function t (s) { let e = Object.assign({ h1: "h1", p: "p", code: "code", a: "a", pre: "pre", span: "span", hr: "hr", h3: "h3", strong: "strong" }, (0, o.a)(), s.components); return (0, r.jsxs)(r.Fragment, { children: [(0, r.jsx)(e.h1, { children: "Suspense" }), "\n", (0, r.jsxs)(e.p, { children: ["你可以启用 ", (0, r.jsx)(e.code, { children: "suspense" }), " 选项，从而让 SWR 和 React ", (0, r.jsx)(e.a, { href: "https://react.dev/reference/react/Suspense", children: "Suspense" }), " 一起使用："] }), "\n", (0, r.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, r.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { Suspense } " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'react'" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWR " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr'" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: " " }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Profile" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { suspense" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " })" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">hello, {" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}</" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, r.jsx)(e.span, { className: "line", children: " " }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Suspense" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fallback" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{<" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">loading...</" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">}>" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Profile" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "/>" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    </" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Suspense" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  )" }) }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, r.jsx)(i.UW, { children: (0, r.jsxs)(e.p, { children: ["请注意，SWR 的 ", (0, r.jsx)(e.code, { children: "suspense" }), " 选项并不支持在渲染过程中发生改变。"] }) }), "\n", (0, r.jsxs)(e.p, { children: ["在 Suspense 模式下，", (0, r.jsx)(e.code, { children: "data" }), " 总是请求响应（因此你无需检查它是否是 ", (0, r.jsx)(e.code, { children: "undefined" }), "）。但如果发生错误，则需要使用 ", (0, r.jsx)(e.a, { href: "https://reactjs.org/docs/concurrent-mode-suspense.html#handling-errors.html", children: "错误边界" }), " 来捕获它："] }), "\n", (0, r.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, r.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "<" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "ErrorBoundary" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fallback" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{<" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h2" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">Could not fetch posts.</" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h2" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">}>" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Suspense" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fallback" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{<" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">Loading posts...</" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">}>" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Profile" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Suspense" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "</" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "ErrorBoundary" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] })] }) }), "\n", (0, r.jsx)(i.UW, { children: (0, r.jsxs)(e.p, { children: ["Suspense 模式会在数据准备就绪前暂停渲染，这意味着它很容易导致请求瀑布问题。为了避免这种情况，应该在渲染之前预请求获取资源。", (0, r.jsx)(e.a, { href: "/docs/prefetching.html", children: "更多信息" })] }) }), "\n", (0, r.jsx)(e.hr, {}), "\n", (0, r.jsx)(e.h3, { id: "note-with-conditional-fetching", children: "注意：使用条件请求" }), "\n", (0, r.jsxs)(e.p, { children: ["通常，当启用 ", (0, r.jsx)(e.code, { children: "suspense" }), " 时，可以确保 ", (0, r.jsx)(e.code, { children: "data" }), " 在渲染时始终是准备就绪的："] }), "\n", (0, r.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, r.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Profile" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { suspense" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " })" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: " " }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// `data` 永远不会是 `undefined`" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ..." })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, r.jsxs)(e.p, { children: ["但是，当它与条件请求或依赖请求一起使用时，如果请求被", (0, r.jsx)(e.strong, { children: "暂停" }), "，", (0, r.jsx)(e.code, { children: "data" }), " 将会是 ", (0, r.jsx)(e.code, { children: "undefined" }), "："] }), "\n", (0, r.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, r.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Profile" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(isReady " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { suspense" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " })" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: " " }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 如果 `isReady` 是 false，`data` 将会是 `undefined`" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ..." })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, r.jsxs)(e.p, { children: ["如果你想阅读有关该限制的更多技术细节，请查看", (0, r.jsx)(e.a, { href: "https://github.com/vercel/swr/pull/357#issuecomment-627089889", children: "这里的讨论" }), "。"] }), "\n", (0, r.jsx)(e.h3, { id: "server-side-rendering", children: "服务端渲染" }), "\n", (0, r.jsxs)(e.p, { children: ["当在服务端渲染（包括 Next.js 中的预渲染功能）中使用 suspense 模式时，", (0, r.jsx)(e.strong, { children: "必须" }), "通过 ", (0, r.jsx)(e.a, { href: "/docs/with-nextjs#pre-rendering-with-default-data.html", children: "fallbackData 或 fallback" }), " 提供初始数据，这意味着你不能使用 ", (0, r.jsx)(e.code, { children: "Suspense" }), " 在服务器端获取数据，而是完全使用客户端的数据请求，或者通过框架级的数据获取方法（例如 Next.js 中的 getStaticProps）获取数据，更多的讨论可以在", (0, r.jsx)(e.a, { href: "https://github.com/vercel/swr/issues/1906", children: "这里" }), "找到。"] })] }) } e.default = (0, l.j)({ MDXContent: function () { let s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e } = Object.assign({}, (0, o.a)(), s.components); return e ? (0, r.jsx)(e, { ...s, children: (0, r.jsx)(t, { ...s }) }) : t(s) }, pageOpts: { filePath: "pages/docs/suspense.mdx.html", route: "/docs/suspense.html", title: "Suspense", headings: c }, pageNextRoute: "/docs/suspense.html" }) } }, function (s) { s.O(0, [17, 888, 774, 179], function () { return s(s.s = 9156) }), _N_E = s.O() }])