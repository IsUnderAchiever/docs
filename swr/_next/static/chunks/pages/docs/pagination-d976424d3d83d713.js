(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[724], { 5051: function (s, e, l) { (window.__NEXT_P = window.__NEXT_P || []).push(["/docs/pagination.html", function () { return l(9285) }]) }, 9285: function (s, e, l) { "use strict"; l.r(e), l.d(e, { __toc: function () { return x }, default: function () { return k } }); var n = l(2676), r = l(3017), o = l(6952), i = l(4894), t = () => (0, n.jsx)("div", { children: (0, n.jsxs)("svg", { viewBox: "0 0 769 356", fill: "none", class: "invert-on-dark", children: [(0, n.jsx)("path", { d: "M5 0.5H763C765.485 0.5 767.5 2.51472 767.5 5V351C767.5 353.485 765.485 355.5 763 355.5H5.00002C2.51473 355.5 0.5 353.485 0.5 351V5C0.5 2.51472 2.51472 0.5 5 0.5Z", fill: "white", stroke: "#EEEEEE" }), (0, n.jsx)("path", { d: "M1 288H769", stroke: "#E5E5E5" }), (0, n.jsx)("path", { d: "M21 26H747V40H21V26Z", fill: "#E5E5E5" }), (0, n.jsx)("path", { d: "M21 70H747V84H21V70Z", fill: "#E5E5E5" }), (0, n.jsx)("path", { d: "M21 114H747V128H21V114Z", fill: "#E5E5E5" }), (0, n.jsx)("path", { d: "M21 158H747V172H21V158Z", fill: "#E5E5E5" }), (0, n.jsx)("path", { d: "M21 202H747V216H21V202Z", fill: "#E5E5E5" }), (0, n.jsx)("path", { d: "M21 246H747V260H21V246Z", fill: "#E5E5E5" }), (0, n.jsx)("rect", { x: "21.5", y: "306.5", width: "69", height: "31", rx: "2.5", fill: "#FAFAFA", stroke: "#D3D3D3" }), (0, n.jsx)("path", { fill: "#454545" }), (0, n.jsx)("rect", { x: "307.5", y: "306.5", width: "69", height: "31", rx: "2.5", fill: "#FAFAFA", stroke: "#D3D3D3" }), (0, n.jsx)("path", { fill: "#454545" }), (0, n.jsx)("path", { d: "M281.098 322.03C281.563 322.03 281.951 321.651 281.951 321.178C281.951 320.713 281.563 320.33 281.098 320.33C280.63 320.33 280.246 320.713 280.246 321.178C280.246 321.651 280.63 322.03 281.098 322.03ZM284.497 322.03C284.961 322.03 285.349 321.651 285.349 321.178C285.349 320.713 284.961 320.33 284.497 320.33C284.028 320.33 283.645 320.713 283.645 321.178C283.645 321.651 284.028 322.03 284.497 322.03ZM287.895 322.03C288.36 322.03 288.748 321.651 288.748 321.178C288.748 320.713 288.36 320.33 287.895 320.33C287.426 320.33 287.043 320.713 287.043 321.178C287.043 321.651 287.426 322.03 287.895 322.03Z", fill: "black" }), (0, n.jsx)("rect", { x: "103.5", y: "306.5", width: "44", height: "31", rx: "2.5", fill: "#FAFAFA", stroke: "#D3D3D3" }), (0, n.jsx)("path", { fill: "#454545" }), (0, n.jsx)("rect", { x: "160.5", y: "306.5", width: "44", height: "31", rx: "2.5", fill: "#EDEDED", stroke: "#B3B3B3" }), (0, n.jsx)("path", { fill: "#454545" }), (0, n.jsx)("rect", { x: "217.5", y: "306.5", width: "44", height: "31", rx: "2.5", fill: "#FAFAFA", stroke: "#D3D3D3" }), (0, n.jsx)("path", { fill: "#454545" })] }) }), c = l(7133); let a = {}, h = () => { let s = (0, c.Z)(a); return (0, n.jsxs)("svg", { viewBox: "0 0 769 356", fill: "none", className: "invert-on-dark", children: [(0, n.jsx)("path", { d: "M5 0.5H763C765.485 0.5 767.5 2.51472 767.5 5V351C767.5 353.485 765.485 355.5 763 355.5H5.00002C2.51473 355.5 0.5 353.485 0.5 351V5C0.5 2.51472 2.51472 0.5 5 0.5Z", fill: "white", stroke: "#EEEEEE" }), (0, n.jsx)("path", { d: "M21 26H747V40H21V26Z", fill: "#E5E5E5" }), (0, n.jsx)("path", { d: "M21 70H747V84H21V70Z", fill: "#E5E5E5" }), (0, n.jsx)("path", { d: "M21 114H747V128H21V114Z", fill: "#E5E5E5" }), (0, n.jsx)("path", { d: "M21 158H747V172H21V158Z", fill: "#E5E5E5" }), (0, n.jsx)("path", { d: "M21 202H747V216H21V202Z", fill: "#E5E5E5" }), (0, n.jsx)("path", { d: "M21 246H747V260H21V246Z", fill: "#E5E5E5" }), (0, n.jsx)("rect", { x: "21.5", y: "288.5", width: "725", height: "31", rx: "2.5", fill: "#FAFAFA", stroke: "#D3D3D3" }), (0, n.jsx)("path", { d: s, fill: "#454545" })] }) }, x = [{ depth: 2, value: "何时应该继续使用 useSWR", id: "when-to-use-useswr" }, { depth: 3, value: "分页", id: "pagination" }, { depth: 3, value: "无限加载", id: "infinite-loading" }, { depth: 3, value: "高级用例", id: "advanced-cases" }, { depth: 2, value: "useSWRInfinite", id: "useswrinfinite" }, { depth: 3, value: "API", id: "api" }, { depth: 4, value: "参数", id: "parameters" }, { depth: 4, value: "返回值", id: "return-values" }, { depth: 3, value: "示例 1：基于索引的分页 API", id: "example-1-index-based-paginated-api" }, { depth: 3, value: "示例 2：基于游标或偏移的分页 API", id: "example-2-cursor-or-offset-based-paginated-api" }, { depth: 3, value: "并行请求模式", id: "parallel-fetching-mode" }, { depth: 3, value: "重新验证特定页面", id: "revalidate-specific-pages" }, { depth: 3, value: "全局变更 useSWRInfinite 数据", id: "global-mutate-with-useswrinfinite" }, { depth: 3, value: "高级特性", id: "advanced-features" }]; function d (s) { let e = Object.assign({ h1: "h1", p: "p", code: "code", strong: "strong", h2: "h2", h3: "h3", pre: "pre", span: "span", a: "a", h4: "h4", ul: "ul", li: "li" }, (0, o.a)(), s.components); return (0, n.jsxs)(n.Fragment, { children: [(0, n.jsx)(e.h1, { children: "分页" }), "\n", (0, n.jsx)(i.UW, { emoji: "✅", children: (0, n.jsxs)(e.p, { children: ["请更新到最新版本 (≥ 0.3.0) 来用此 API。原来的 ", (0, n.jsx)("code", { children: "useSWRPages" }), " API 已废弃。"] }) }), "\n", (0, n.jsxs)(e.p, { children: ["SWR 提供了一个专用 API ", (0, n.jsx)(e.code, { children: "useSWRInfinite" }), " 来支持常见的 UI 模式，比如 ", (0, n.jsx)(e.strong, { children: "分页" }), " 和 ", (0, n.jsx)(e.strong, { children: "无限加载" }), "。"] }), "\n", (0, n.jsxs)(e.h2, { id: "when-to-use-useswr", children: ["何时应该继续使用 ", (0, n.jsx)(e.code, { children: "useSWR" })] }), "\n", (0, n.jsx)(e.h3, { id: "pagination", children: "分页" }), "\n", (0, n.jsxs)(e.p, { children: ["首先，我们可能 ", (0, n.jsx)(e.strong, { children: "并不" }), " 需要使用 ", (0, n.jsx)(e.code, { children: "useSWRInfinite" }), "，而是直接使用 ", (0, n.jsx)(e.code, { children: "useSWR" }), "，例如我们正在构建以下场景："] }), "\n", "\n", (0, n.jsx)("div", { className: "mt-8", children: (0, n.jsx)(t, {}) }), "\n", (0, n.jsxs)(e.p, { children: ["...这是一个典型的分页用户界面。来看看它如何用 ", (0, n.jsx)(e.code, { children: "useSWR" }), " 轻松实现："] }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "pageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setPageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "] " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useState" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "0" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ");" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// API URL 中包含了页面索引，它是一个 React state。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`/api/data?page=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "${" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "pageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "}" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher);" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ... 处理加载和错误的状态" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    {" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".map" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(item " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "item" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".id}>{" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "item" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">)}" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setPageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(pageIndex " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "-" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")}>Previous</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setPageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(pageIndex " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")}>Next</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsx)(e.p, { children: "我们还可以为这个页面组件创建一个抽象层。：" }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Page" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " ({ index }) {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`/api/data?page=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "${" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "index" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "}" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher);" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ... 处理加载和错误状态" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".map" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(item " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "item" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".id}>{" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "item" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">)" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "pageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setPageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "] " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useState" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "0" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ");" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Page" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "index" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{pageIndex}/>" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setPageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(pageIndex " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "-" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")}>Previous</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setPageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(pageIndex " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")}>Next</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsx)(e.p, { children: "由于 SWR 的缓存，我们可以预加载下一页的页面。我们将下一页的页面渲染到隐藏的 div 中，这样 SWR 会触发下一页页面的数据获取。当用户导航到下一页时，数据就已经存在了：" }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "pageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setPageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "] " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useState" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "0" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ");" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Page" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "index" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{pageIndex}/>" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "style" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{{ display" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'none'" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }}><" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Page" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "index" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{pageIndex " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}/></" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setPageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(pageIndex " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "-" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")}>Previous</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setPageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(pageIndex " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")}>Next</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsxs)(e.p, { children: ["仅用一行代码，我们就获得了更好的用户体验。", (0, n.jsx)(e.code, { children: "useSWR" }), " hook 已经非常强大了，能够覆盖大多数的场景。"] }), "\n", (0, n.jsx)(e.h3, { id: "infinite-loading", children: "无限加载" }), "\n", (0, n.jsxs)(e.p, { children: ["有时我们想构建一个", (0, n.jsx)(e.strong, { children: "无限加载" }), '的界面，通过一个 "Load More" 按钮向列表追加数据（或者当你滚动时自动加载）：'] }), "\n", "\n", (0, n.jsx)("div", { className: "mt-8", children: (0, n.jsx)(h, {}) }), "\n", (0, n.jsxs)(e.p, { children: ["要实现这个功能，我们需要在该页面上进行", (0, n.jsx)(e.strong, { children: "动态的数据请求" }), "。React Hooks 中存在这 ", (0, n.jsx)(e.a, { href: "https://react.dev/reference/rules/rules-of-hooks", children: "两个规则" }), "，所以我们 ", (0, n.jsx)(e.strong, { children: "不能" }), " 这么写："] }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "cnt" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setCnt" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "] " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useState" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "list" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " []" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "for" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "let" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " i " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "0" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "; i " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "<" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " cnt; i" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "++" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// \uD83D\uDEA8 出错了！通常来说，你不能在循环里使用 hooks。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`/api/data?page=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "${" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "i" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "}" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "list" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".push" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(data)" })] }), "\n", (0, n.jsx)(e.span, { className: "line highlighted", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    {" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "list" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".map" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "((data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " i) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{i}>{" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "        " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".map" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(item " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "item" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".id}>{" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "item" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">)" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      }</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">)}" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setCnt" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(cnt " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")}>Load More</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsxs)(e.p, { children: ["相反，我们可以使用我们创建的 ", (0, n.jsx)(e.code, { children: "<Page/>" }), " 抽象来实现这个功能:"] }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "cnt" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setCnt" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "] " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useState" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "pages" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " []" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "for" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "let" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " i " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "0" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "; i " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "<" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " cnt; i" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "++" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "pages" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".push" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(<" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Page" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "index" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{i} " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{i} />)" })] }), "\n", (0, n.jsx)(e.span, { className: "line highlighted", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    {pages}" }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setCnt" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(cnt " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")}>Load More</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsx)(e.h3, { id: "advanced-cases", children: "高级用例" }), "\n", (0, n.jsx)(e.p, { children: "但是，在某些高级用例中，上述的解决方案并不适用。" }), "\n", (0, n.jsxs)(e.p, { children: ['例如，我们仍然实现相同的 "Load More" 界面，但还需要显示一共有多少项。我们无法再使用 ', (0, n.jsx)(e.code, { children: "<Page />" }), " 的解决方案，因为顶层 UI ", (0, n.jsx)(e.code, { children: "(<App/>)" }), " 需要每个页面中的数据。"] }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "cnt" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setCnt" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "] " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useState" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "pages" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " []" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "for" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "let" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " i " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "0" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "; i " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "<" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " cnt; i" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "++" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "pages" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".push" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(<" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Page" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "index" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{i} " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{i} />)" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "p" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">??? items</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "p" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    {pages}" }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setCnt" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(cnt " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")}>Load More</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsx)(e.p, { children: "此外，如果分页的 API 是 **基于游标（cursor）**的，那么这个解决方案也不适用。因为每个页面都需要前一页的数据，它们不是隔离的。" }), "\n", (0, n.jsxs)(e.p, { children: ["这意味着我们需要一个更高级的解决方案来解决这个问题，因此，我们引入了一个新的 ", (0, n.jsx)(e.code, { children: "useSWRInfinite" }), " Hook。。"] }), "\n", (0, n.jsx)(e.h2, { id: "useswrinfinite", children: "useSWRInfinite" }), "\n", (0, n.jsxs)(e.p, { children: [(0, n.jsx)(e.code, { children: "useSWRInfinite" }), " 让我们能够通过一个 Hook 触发多个请求。就像下面这样："] }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWRInfinite " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr/infinite'" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ..." }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isLoading" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isValidating" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "mutate" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "size" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setSize" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRInfinite" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  getKey" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " options" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" }) })] }) }), "\n", (0, n.jsx)(e.p, { children: "与 useSWR 类似，这个新 Hook 接受一个返回请求 key 的函数、一个 fetcher 函数和一些选项。它返回和 useSWR 一样的所有值，并增加了两个额外的值：页面大小和一个页面大小的 setter，类似于 React 的 state。" }), "\n", (0, n.jsx)(e.p, { children: "在无限滚动中，一个 “页面” 就是一个请求，我们的目标是获取多个页面并将它们渲染出来。" }), "\n", (0, n.jsx)(i.UW, { emoji: "⚠️", children: (0, n.jsxs)(e.p, { children: ["如果你使用的是 SWR 0.x 版本，则需要从 ", (0, n.jsx)(e.code, { children: "swr" }), " 导入 ", (0, n.jsx)(e.code, { children: "useSWRInfinite" }), "：", (0, n.jsx)("br", {}), "\n", (0, n.jsx)(e.code, { children: "import { useSWRInfinite } from 'swr'" })] }) }), "\n", (0, n.jsx)(e.h3, { id: "api", children: "API" }), "\n", (0, n.jsx)(e.h4, { id: "parameters", children: "参数" }), "\n", (0, n.jsxs)(e.ul, { children: ["\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "getKey" }), ": 一个接受索引值和上一页数据，并返回页面 key 值的函数"] }), "\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "fetcher" }), ": 和 ", (0, n.jsx)(e.code, { children: "useSWR" }), " 的 ", (0, n.jsx)(e.a, { href: "/docs/data-fetching.html", children: "fetcher 函数" }), " 一样"] }), "\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "options" }), ": 接受 ", (0, n.jsx)(e.code, { children: "useSWR" }), " 支持的所有选项，以及四个额外选项：", "\n", (0, n.jsxs)(e.ul, { children: ["\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "initialSize = 1" }), ": 最初应加载的页面数量"] }), "\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "revalidateAll = false" }), ": 始终尝试重新验证所有页面"] }), "\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "revalidateFirstPage = true" }), ": 始终尝试重新验证第一页"] }), "\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "persistSize = false" }), ": 当第一页的 key 发生变化时，不将 page size（或者 ", (0, n.jsx)(e.code, { children: "initialSize" }), " 如果设置了该参数）重置为 1"] }), "\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "parallel = false" }), ": 并行加载多页"] }), "\n"] }), "\n"] }), "\n"] }), "\n", (0, n.jsx)(i.UW, { children: (0, n.jsxs)(e.p, { children: ["请注意，", (0, n.jsx)(e.code, { children: "initialSize" }), " 选项不允许在运行时更改。"] }) }), "\n", (0, n.jsx)(e.h4, { id: "return-values", children: "返回值" }), "\n", (0, n.jsxs)(e.ul, { children: ["\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "data" }), ": 由每一页的请求的响应数据组成的数组"] }), "\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "error" }), ": 与 ", (0, n.jsx)(e.code, { children: "useSWR" }), " 的 ", (0, n.jsx)(e.code, { children: "error" }), " 返回值相同"] }), "\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "isLoading" }), ": 与 ", (0, n.jsx)(e.code, { children: "useSWR" }), " 的 ", (0, n.jsx)(e.code, { children: "isLoading" }), " 返回值相同"] }), "\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "isValidating" }), ": 与 ", (0, n.jsx)(e.code, { children: "useSWR" }), " 的 ", (0, n.jsx)(e.code, { children: "isValidating" }), " 返回值相同"] }), "\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "mutate" }), ": 和 ", (0, n.jsx)(e.code, { children: "useSWR" }), " 的绑定 mutate 函数一样，但可以用于操作 ", (0, n.jsx)(e.code, { children: "data" }), " 数组"] }), "\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "size" }), ": 即将请求并返回的页面数量"] }), "\n", (0, n.jsxs)(e.li, { children: [(0, n.jsx)(e.code, { children: "setSize" }), ": 设置需要被请求的页面数量"] }), "\n"] }), "\n", (0, n.jsx)(e.h3, { id: "example-1-index-based-paginated-api", children: "示例 1：基于索引的分页 API" }), "\n", (0, n.jsx)(e.p, { children: "普通的基于索引的 API：" }), "\n", (0, n.jsx)(e.pre, { "data-language": "plaintext", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "plaintext", "data-theme": "default", children: [(0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "GET /users?page=0&limit=10" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "[" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  { name: 'Alice', ... }," }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  { name: 'Bob', ... }," }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  { name: 'Cathy', ... }," }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  ..." }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "]" }) })] }) }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 一个用于拿到每个页面的 SWR key 的函数，" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 它的返回值会被 `fetcher` 接收。" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 如果返回值是 `null`，则该页面不会开始请求。" }) }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "getKey" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (pageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " previousPageData) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (previousPageData " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "&&" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "previousPageData" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "." }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "length" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 已经到最后一页" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`/users?page=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "${" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "pageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "}" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "&limit=10`" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "                    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// SWR key" })] }), "\n", (0, n.jsx)(e.span, { className: "line highlighted", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line highlighted", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "size" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setSize" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRInfinite" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(getKey" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "data) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'loading'" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 现在我们可以计算出用户的总数" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "let" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " totalUsers " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "0" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "for" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "let" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " i " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "0" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "; i " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "<" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "." }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "length" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "; i" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "++" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    totalUsers " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " data[i]." }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "length" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "p" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">{totalUsers} users listed</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "p" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    {" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".map" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "((users" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " index) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// `data` 是每个页面 API 响应的数组。" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "users" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".map" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(user " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "key" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".id}>{" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">)" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    })}" }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onClick" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{() " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setSize" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(size " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")}>Load More</" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "button" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsxs)(e.p, { children: [(0, n.jsx)(e.code, { children: "getKey" }), " 函数是 ", (0, n.jsx)(e.code, { children: "useSWRInfinite" }), " 和 ", (0, n.jsx)(e.code, { children: "useSWR" }), " 之间的主要区别。它接受当前页的索引以及上一页的数据。因此可以很好地支持基于索引和基于游标的分页 API。"] }), "\n", (0, n.jsxs)(e.p, { children: ["此外，", (0, n.jsx)(e.code, { children: "data" }), " 不再只是一个 API 响应。它是多个 API 响应的数组："] }), "\n", (0, n.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "js", "data-theme": "default", children: [(0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// `data` 将如下所示" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "[" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  [" }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    { name" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'Alice'" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    { name" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'Bob'" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    { name" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'Cathy'" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  ]" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  [" }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    { name" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'John'" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    { name" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'Paul'" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    { name" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'George'" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " }" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  ]" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "]" }) })] }) }), "\n", (0, n.jsx)(e.h3, { id: "example-2-cursor-or-offset-based-paginated-api", children: "示例 2：基于游标或偏移的分页 API" }), "\n", (0, n.jsx)(e.p, { children: "假设现在 API 需要一个游标，并将下一个游标和数据一起返回：" }), "\n", (0, n.jsx)(e.pre, { "data-language": "plaintext", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "plaintext", "data-theme": "default", children: [(0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "GET /users?cursor=123&limit=10" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  data: [" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    { name: 'Alice' }," }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    { name: 'Bob' }," }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    { name: 'Cathy' }," }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    ..." }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  ]," }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  nextCursor: 456" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsxs)(e.p, { children: ["我们可以将 ", (0, n.jsx)(e.code, { children: "getKey" }), " 函数改为下面这样："] }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "getKey" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (pageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " previousPageData) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 已经到最后一页" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (previousPageData " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "&&" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "previousPageData" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".data) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 在首页时，没有 `previousPageData`" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (pageIndex " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "===" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "0" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`/users?limit=10`" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 将游标添加到 API" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`/users?cursor=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "${" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "previousPageData" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".nextCursor" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "}" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "&limit=10`" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsx)(e.h3, { id: "parallel-fetching-mode", children: "并行请求模式" }), "\n", (0, n.jsx)(i.UW, { emoji: "✅", children: (0, n.jsx)(e.p, { children: "请升级至最新版本（≥ 2.1.0）以使用此 API" }) }), "\n", (0, n.jsxs)(e.p, { children: [(0, n.jsx)(e.code, { children: "useSWRInfinite" }), " 的默认行为是按顺序获取每个页面的数据，因为 key 的创建基于先前获取的数据。然而，对于一大堆没有相互依赖关系的页面，按顺序获取数据可能不是最优的，尤其是当页面数量很多时。通过将 ", (0, n.jsx)(e.code, { children: "parallel" }), " 选项设置为 ", (0, n.jsx)(e.code, { children: "true" }), "，你可以独立地并行获取页面数据，这可以显着加快加载过程。"] }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// parallel = false (default)" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// page1 ===> page2 ===> page3 ===> done" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "//" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// parallel = true" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// page1 ==> done" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// page2 =====> done" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// page3 ===> done" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "//" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// previousPageData 始终为 `null`" }) }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "getKey" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (pageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " previousPageData) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`/users?page=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "${" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "pageIndex" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "}" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "&limit=10`" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRInfinite" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(getKey" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { parallel" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "true" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " })" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsx)(i.UW, { emoji: "⚠️", children: (0, n.jsxs)(e.p, { children: ["当你启用了 ", (0, n.jsx)(e.code, { children: "parallel" }), " 选项，", (0, n.jsx)(e.code, { children: "getKey" }), " 函数的参数 ", (0, n.jsx)(e.code, { children: "previousPageData" }), " 会变为 ", (0, n.jsx)(e.code, { children: "null" }), "。"] }) }), "\n", (0, n.jsx)(e.h3, { id: "revalidate-specific-pages", children: "重新验证特定页面" }), "\n", (0, n.jsx)(i.UW, { emoji: "✅", children: (0, n.jsx)(e.p, { children: "请升级至最新版本（≥ 2.2.5）以使用此 API" }) }), "\n", (0, n.jsxs)(e.p, { children: [(0, n.jsx)(e.code, { children: "useSWRInfinite" }), " 默认行为是重新验证所有已加载的页面，但你可能只想重新验证已更改的特定页面，你可以通过给 ", (0, n.jsx)(e.code, { children: "revalidate" }), " 选项传递一个函数来限定需要重新验证的页面。"] }), "\n", (0, n.jsxs)(e.p, { children: ["每个页面都会调用 ", (0, n.jsx)(e.code, { children: "revalidate" }), " 函数。"] }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "mutate" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "size" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRInfinite" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    (index) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`/api/?page=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "${" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "index " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "}" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " index " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "1" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "]" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    fetcher" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  );" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(data" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 只重新验证最后一页" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "revalidate" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (pageData" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [url" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " page]) " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " page " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "===" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " size" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  });" }) }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsxs)(e.h3, { id: "global-mutate-with-useswrinfinite", children: ["全局变更 ", (0, n.jsx)(e.code, { children: "useSWRInfinite" }), " 数据"] }), "\n", (0, n.jsxs)(e.p, { children: [(0, n.jsx)(e.code, { children: "useSWRInfinite" }), " 会将所有页面数据存储在缓存中，并使用特殊的缓存 key 来存储每个页面的数据。因此，您需要在 ", (0, n.jsx)(e.code, { children: "swr/infinite" }), " 中使用 ", (0, n.jsx)(e.code, { children: "unstable_serialize" }), " 对数据进行序列化，才能使用全局的 ", (0, n.jsx)(e.code, { children: "mutate" }), " 方法重新验证数据。"] }), "\n", (0, n.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, n.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { useSWRConfig } " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"swr"' })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { unstable_serialize } " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"swr/infinite"' })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: " " }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "App" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "mutate" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWRConfig" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, n.jsxs)(e.span, { className: "line", children: [(0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "mutate" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "unstable_serialize" }), (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(getKey))" })] }), "\n", (0, n.jsx)(e.span, { className: "line", children: (0, n.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, n.jsx)(i.UW, { emoji: "⚠️", children: (0, n.jsxs)(e.p, { children: ["正如命名所示，", (0, n.jsx)(e.code, { children: "unstable_serialize" }), " 目前并不是一个稳定的 API，所以我们可能会在未来修改它。"] }) }), "\n", (0, n.jsx)(e.h3, { id: "advanced-features", children: "高级特性" }), "\n", (0, n.jsxs)(e.p, { children: [(0, n.jsx)(e.a, { href: "/examples/infinite-loading.html", children: "这里有一个示例" }), " 演示了如何使用 ", (0, n.jsx)(e.code, { children: "useSWRInfinite" }), " 实现以下功能："] }), "\n", (0, n.jsxs)(e.ul, { children: ["\n", (0, n.jsx)(e.li, { children: "显示加载状态" }), "\n", (0, n.jsx)(e.li, { children: "如果为空，显示一个特殊的 UI" }), "\n", (0, n.jsx)(e.li, { children: '如果加载到最后一页，禁用 "Load More" 按钮' }), "\n", (0, n.jsx)(e.li, { children: "可变的数据源" }), "\n", (0, n.jsx)(e.li, { children: "刷新整个列表" }), "\n"] })] }) } var k = (0, r.j)({ MDXContent: function () { let s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e } = Object.assign({}, (0, o.a)(), s.components); return e ? (0, n.jsx)(e, { ...s, children: (0, n.jsx)(d, { ...s }) }) : d(s) }, pageOpts: { filePath: "pages/docs/pagination.mdx.html", route: "/docs/pagination.html", title: "分页", headings: x }, pageNextRoute: "/docs/pagination.html" }) } }, function (s) { s.O(0, [17, 888, 774, 179], function () { return s(s.s = 5051) }), _N_E = s.O() }])