(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[153], { 9659: function (s, e, r) { (window.__NEXT_P = window.__NEXT_P || []).push(["/docs/getting-started.html", function () { return r(2661) }]) }, 2661: function (s, e, r) { "use strict"; r.r(e), r.d(e, { __toc: function () { return h }, default: function () { return d } }); var l = r(2676), n = r(3017), o = r(6952), i = r(4894), c = r(1530), t = r.n(c); function a () { return (0, l.jsx)("div", { children: (0, l.jsxs)("svg", { fill: "none", viewBox: "0 0 769 193", class: "invert-on-dark", children: [(0, l.jsx)("path", { fill: "#fff", d: "M0 0h768v193H0z" }), (0, l.jsx)("mask", { id: "a", width: "32", height: "32", x: "720", y: "11", maskUnits: "userSpaceOnUse", children: (0, l.jsx)("circle", { cx: "736", cy: "27", r: "16", fill: "#fff" }) }), (0, l.jsxs)("g", { mask: "url(#a)", children: [(0, l.jsx)("circle", { cx: "736", cy: "27", r: "16", fill: "#EEE" }), (0, l.jsx)("circle", { cx: "736", cy: "22.9", r: "6.5", fill: "#C4C4C4" }), (0, l.jsx)("ellipse", { cx: "736", cy: "39.3", fill: "#C4C4C4", rx: "11.2", ry: "7.8" })] }), (0, l.jsx)("path", { fill: "#EEE", d: "M15 24h186v7H15z" }), (0, l.jsx)("path", { stroke: "#EEE", d: "M0 54.5h768" }), (0, l.jsx)("path", { fill: "#E5E5E5", d: "M423 107h108v14H423z" }), (0, l.jsx)("path", { fill: "#000", d: "" }), (0, l.jsx)("path", { fill: "#EEE", "fill-rule": "evenodd", d: "M5 1h758a4 4 0 014 4v173h1V5a5 5 0 00-5-5H5a5 5 0 00-5 5v173h1V5a4 4 0 014-4z", "clip-rule": "evenodd" })] }) }) } let h = [{ depth: 2, value: "安装", id: "installation" }, { depth: 2, value: "快速开始", id: "quick-start" }, { depth: 2, value: "可复用组件", id: "make-it-reusable" }, { depth: 2, value: "示例", id: "example" }]; function x (s) { let e = Object.assign({ h1: "h1", h2: "h2", p: "p", pre: "pre", code: "code", span: "span", strong: "strong", a: "a" }, (0, o.a)(), s.components); return (0, l.jsxs)(l.Fragment, { children: [(0, l.jsx)(e.h1, { children: "入门" }), "\n", (0, l.jsx)(e.h2, { id: "installation", children: "安装" }), "\n", (0, l.jsx)(e.p, { children: "在 React 项目目录运行以下命令：" }), "\n", (0, l.jsxs)(i.mQ, { items: ["pnpm", "npm", "yarn"], children: [(0, l.jsx)(i.OK, { children: (0, l.jsx)(e.pre, { "data-language": "bash", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsx)(e.code, { "data-language": "bash", "data-theme": "default", children: (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "pnpm" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string)" }, children: "add" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string)" }, children: "swr" })] }) }) }) }), (0, l.jsx)(i.OK, { children: (0, l.jsx)(e.pre, { "data-language": "bash", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsx)(e.code, { "data-language": "bash", "data-theme": "default", children: (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "npm" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string)" }, children: "i" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string)" }, children: "swr" })] }) }) }) }), (0, l.jsx)(i.OK, { children: (0, l.jsx)(e.pre, { "data-language": "bash", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsx)(e.code, { "data-language": "bash", "data-theme": "default", children: (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "yarn" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string)" }, children: "add" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string)" }, children: "swr" })] }) }) }) })] }), "\n", (0, l.jsx)(e.h2, { id: "quick-start", children: "快速开始" }), "\n", (0, l.jsxs)(e.p, { children: ["对于返回 JSON 数据的普通 RESTful APIs，首先需要创建一个 ", (0, l.jsx)(e.code, { children: "fetcher" }), " 函数，这个函数只是原生 ", (0, l.jsx)(e.code, { children: "fetch" }), " 的包装："] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsx)(e.code, { "data-language": "jsx", "data-theme": "default", children: (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetcher" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "args) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetch" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "..." }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "args)" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".then" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "((res) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "res" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".json" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "())" })] }) }) }), "\n", (0, l.jsx)(i.UW, { emoji: "\uD83D\uDCA1", children: (0, l.jsxs)(e.p, { children: ["如果要使用 GraphQL API 或类似 Axios 的库，可以自己创建 fetcher 函数。 点击 ", (0, l.jsx)(t(), { href: "/docs/data-fetching.html", children: "这里" }), " 查看更多示例。"] }) }), "\n", (0, l.jsxs)(e.p, { children: ["然后你可以 import ", (0, l.jsx)(e.code, { children: "useSWR" }), " 并开始在任何函数组件中使用它："] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWR " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: '"swr"' }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ";" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Profile" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " ({ userId }) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isLoading" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`/api/user/" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "${" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "userId" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "}" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (error) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">failed to load</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (isLoading) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">loading...</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 渲染数据" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">hello {" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}!</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["通常，一个请求有 3 种可能的状态：“loading”、“ready”或“error”。你可以使用 ", (0, l.jsx)(e.code, { children: "data" }), "、", (0, l.jsx)(e.code, { children: "error" }), " 和 ", (0, l.jsx)(e.code, { children: "isLoading" }), " 的值来确定当前的请求状态，并返回相应的 UI。"] }), "\n", (0, l.jsx)(e.h2, { id: "make-it-reusable", children: "可复用组件" }), "\n", (0, l.jsx)(e.p, { children: "在构建 web 应用时，你可能需要在 UI 的很多地方重用数据。在 SWR 上创建可重用的数据 hooks 非常容易：" }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useUser" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(id) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isLoading" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`/api/user/" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "${" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "id" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "}" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " data" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    isLoading" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    isError" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " error" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsx)(e.p, { children: "在组件中使用它：" }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Avatar" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "({ id }) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isLoading" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isError" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useUser" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(id)" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (isLoading) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Spinner" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (isError) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Error" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "img" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "src" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".avatar} />" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["通过采用这种模式，你可以不必以命令的方式", (0, l.jsx)(e.strong, { children: "请求" }), "数据：开始请求、更新加载状态并返回最终结果。 相反，你的代码更具有声明性：你只需要指定组件使用什么数据即可。"] }), "\n", (0, l.jsx)(e.h2, { id: "example", children: "示例" }), "\n", (0, l.jsxs)(e.p, { children: ["在一个真实的示例中，我们的网站显示一个导航条和内容，都取决于 ", (0, l.jsx)(e.code, { children: "user" }), "："] }), "\n", "\n", (0, l.jsx)("div", { className: "mt-8", children: (0, l.jsx)(a, {}) }), "\n", (0, l.jsxs)(e.p, { children: ["传统上，我们在顶级组件中使用 ", (0, l.jsx)(e.code, { children: "useEffect" }), " 请求一次数据，然后通过 props 将其传递给子组件（注意，我们现在不处理错误状态）："] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 页面组件" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Page" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " ({ userId }) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "setUser" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "] " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useState" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 请求数据" })] }), "\n", (0, l.jsxs)(e.span, { className: "line highlighted", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useEffect" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(() " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line highlighted", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetch" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`/api/user/" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "${" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "userId" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "}" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "`" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, l.jsxs)(e.span, { className: "line highlighted", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".then" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(res " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "res" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".json" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "())" })] }), "\n", (0, l.jsxs)(e.span, { className: "line highlighted", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".then" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(data " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setUser" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(data))" })] }), "\n", (0, l.jsxs)(e.span, { className: "line highlighted", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " [userId])" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 全局加载状态" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "user) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Spinner" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line highlighted", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Navbar" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{user} />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line highlighted", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Content" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{user} />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 子组件" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Navbar" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "({ user }) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    ..." }) }), "\n", (0, l.jsxs)(e.span, { className: "line highlighted", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Avatar" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{user} />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Content" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "({ user }) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">Welcome back, {" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Avatar" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "({ user }) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "img" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "src" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".avatar} " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "alt" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name} />" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsx)(e.p, { children: "通常，我们需要将所有的数据请求都保存在顶级组件中，并为树深处的每个组件添加 props。如果我们给页面添加更多的数据依赖，代码将变得更加难以维护。" }), "\n", (0, l.jsxs)(e.p, { children: ["虽然我们可以使用 ", (0, l.jsx)(e.a, { href: "https://react.dev/learn/passing-data-deeply-with-context", children: "Context" }), " 来避免传递 props，但仍然存在动态内容问题：页面内容中的组件可以是动态的，顶级组件可能不知道其子组件将需要什么数据。"] }), "\n", (0, l.jsxs)(e.p, { children: ["SWR 完美地解决了这个问题。使用我们刚刚创建的 ", (0, l.jsx)(e.code, { children: "useUser" }), " hook，可以将代码重构为:"] }), "\n", (0, l.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, l.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 页面组件" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Page" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " ({ userId }) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Navbar" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "userId" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{userId} />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Content" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "userId" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{userId} />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 子组件" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Navbar" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " ({ userId }) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    ..." }) }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Avatar" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "userId" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{userId} />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  </" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Content" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " ({ userId }) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line highlighted", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isLoading" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useUser" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(userId)" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (isLoading) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Spinner" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">Welcome back, {" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}</" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "h1" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, l.jsx)(e.span, { className: "line", children: " " }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Avatar" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " ({ userId }) {" })] }), "\n", (0, l.jsxs)(e.span, { className: "line highlighted", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "isLoading" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useUser" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(userId)" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (isLoading) " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "Spinner" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, l.jsxs)(e.span, { className: "line", children: [(0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "img" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "src" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".avatar} " }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "alt" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".name} />" })] }), "\n", (0, l.jsx)(e.span, { className: "line", children: (0, l.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, l.jsxs)(e.p, { children: ["现在数据已 ", (0, l.jsx)(e.strong, { children: "绑定" }), " 到需要该数据的组件上，并且所有组件都是相互 ", (0, l.jsx)(e.strong, { children: "独立" }), " 的。所有的父组件都不需要关心关于数据或数据传递的任何信息。它们只是渲染。现在代码更简单，更易于维护了。"] }), "\n", (0, l.jsxs)(e.p, { children: ["最棒的是，只会有 ", (0, l.jsx)(e.strong, { children: "1 个请求" }), " 发送到 API，因为它们使用相同的 SWR key，因此请求会被自动 ", (0, l.jsx)(e.strong, { children: "去除重复" }), "、", (0, l.jsx)(e.strong, { children: "缓存" }), " 和 ", (0, l.jsx)(e.strong, { children: "共享" }), "。"] }), "\n", (0, l.jsxs)(e.p, { children: ["而且，你的应用现在能够在 ", (0, l.jsx)(e.a, { href: "/docs/revalidation.html", children: "用户聚焦或网络重连" }), " 时重新请求数据！这意味着当用户的笔记本电脑从睡眠状态唤醒，或用户在切换浏览器标签页时，数据将自动刷新。"] })] }) } var d = (0, n.j)({ MDXContent: function () { let s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e } = Object.assign({}, (0, o.a)(), s.components); return e ? (0, l.jsx)(e, { ...s, children: (0, l.jsx)(x, { ...s }) }) : x(s) }, pageOpts: { filePath: "pages/docs/getting-started.mdx.html", route: "/docs/getting-started.html", title: "入门", headings: h }, pageNextRoute: "/docs/getting-started.html" }) } }, function (s) { s.O(0, [17, 888, 774, 179], function () { return s(s.s = 9659) }), _N_E = s.O() }])