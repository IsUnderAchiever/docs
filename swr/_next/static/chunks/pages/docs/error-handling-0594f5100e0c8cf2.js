(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[80], { 8963: function (s, e, r) { (window.__NEXT_P = window.__NEXT_P || []).push(["/docs/error-handling.html", function () { return r(3597) }]) }, 3597: function (s, e, r) { "use strict"; r.r(e), r.d(e, { __toc: function () { return c } }); var o = r(2676), n = r(3017), l = r(6952), i = r(4894); r(1530); let c = [{ depth: 2, value: "状态码和错误对象", id: "status-code-and-error-object" }, { depth: 2, value: "错误重试", id: "error-retry" }, { depth: 2, value: "全局错误报告", id: "global-error-report" }]; function t (s) { let e = Object.assign({ h1: "h1", p: "p", a: "a", code: "code", pre: "pre", span: "span", h2: "h2" }, (0, l.a)(), s.components); return (0, o.jsxs)(o.Fragment, { children: [(0, o.jsx)(e.h1, { children: "错误处理" }), "\n", (0, o.jsxs)(e.p, { children: ["如果在 ", (0, o.jsx)(e.a, { href: "/docs/data-fetching.html", children: (0, o.jsx)(e.code, { children: "fetcher" }) }), " 中抛出错误，hook 会将其作为 ", (0, o.jsx)(e.code, { children: "error" }), " 返回。"] }), "\n", (0, o.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, o.jsxs)(e.code, { "data-language": "js", "data-theme": "default", children: [(0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetcher" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " url " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetch" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(url)" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".then" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(r " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "r" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".json" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "())" })] }), "\n", (0, o.jsx)(e.span, { className: "line", children: " " }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ..." }) }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] })] }) }), "\n", (0, o.jsxs)(e.p, { children: ["如果 fetch promise 被拒绝，将定义 ", (0, o.jsx)(e.code, { children: "error" }), " 对象。"] }), "\n", (0, o.jsx)(e.h2, { id: "status-code-and-error-object", children: "状态码和错误对象" }), "\n", (0, o.jsx)(e.p, { children: "有时我们希望 API 在返回状态码的同时返回一个错误对象。它们对客户端都是有用的。" }), "\n", (0, o.jsxs)(e.p, { children: ["我们可以自定义 ", (0, o.jsx)(e.code, { children: "fetcher" }), " 以返回更多信息。如果状态码不是 ", (0, o.jsx)(e.code, { children: "2xx" }), "，我们则认为它是一个错误，即使它可以被解析为 JSON："] }), "\n", (0, o.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, o.jsxs)(e.code, { "data-language": "js", "data-theme": "default", children: [(0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetcher" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "async" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " url " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "res" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "await" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "fetch" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(url)" })] }), "\n", (0, o.jsx)(e.span, { className: "line", children: " " }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 如果状态码不在 200-299 的范围内，" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 我们仍然尝试解析并抛出它。" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "res" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".ok) {" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "new" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "Error" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'An error occurred while fetching the data.'" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 将额外的信息附加到错误对象上。" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".info " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "await" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "res" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".json" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".status " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "res" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".status" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "throw" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " error" })] }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }) }), "\n", (0, o.jsx)(e.span, { className: "line", children: " " }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "res" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: ".json" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "()" })] }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) }), "\n", (0, o.jsx)(e.span, { className: "line", children: " " }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ..." }) }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// error.info === {" }) }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: '//   message: "You are not authorized to access this resource.",' }) }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: '//   documentation_url: "..."' }) }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// }" }) }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// error.status === 403" }) })] }) }), "\n", (0, o.jsx)(i.UW, { emoji: "\uD83D\uDCA1", children: (0, o.jsxs)(e.p, { children: ["注意：", (0, o.jsx)("code", { children: "data" }), " 和 ", (0, o.jsx)("code", { children: "error" }), " 可以同时存在。所以 UI 可以在知道即将到来的请求失败时显示现有数据。"] }) }), "\n", (0, o.jsxs)(e.p, { children: [(0, o.jsx)(e.a, { href: "/examples/error-handling.html", children: "这里" }), "有一个示例。"] }), "\n", (0, o.jsx)(e.h2, { id: "error-retry", children: "错误重试" }), "\n", (0, o.jsxs)(e.p, { children: ["在出现错误时 SWR 使用", (0, o.jsx)(e.a, { href: "https://en.wikipedia.org/wiki/Exponential_backoff", children: "指数退避算法" }), "重发请求。该算法允许应用从错误中快速恢复，而不会浪费资源频繁地重试。"] }), "\n", (0, o.jsxs)(e.p, { children: ["你还可以通过 ", (0, o.jsx)(e.a, { href: "/docs/api#options.html", children: "onErrorRetry" }), " 选项覆盖该行为："] }), "\n", (0, o.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, o.jsxs)(e.code, { "data-language": "js", "data-theme": "default", children: [(0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onErrorRetry" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (error" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " key" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " config" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " revalidate" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { retryCount }) " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 404 时不重试。" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".status " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "===" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "404" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" })] }), "\n", (0, o.jsx)(e.span, { className: "line", children: " " }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 特定的 key 时不重试。" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (key " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "===" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" })] }), "\n", (0, o.jsx)(e.span, { className: "line", children: " " }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 最多重试 10 次。" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (retryCount " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ">=" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "10" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" })] }), "\n", (0, o.jsx)(e.span, { className: "line", children: " " }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 5秒后重试。" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "setTimeout" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(() " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "revalidate" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "({ retryCount" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " retryCount })" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "5000" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }) }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "})" }) })] }) }), "\n", (0, o.jsxs)(e.p, { children: ["这个回调让你可以灵活的根据各种条件重试。你也可以通过设置 ", (0, o.jsx)(e.code, { children: "shouldRetryOnError: false" }), " 来禁用它。"] }), "\n", (0, o.jsxs)(e.p, { children: ["也可以通过", (0, o.jsx)(e.a, { href: "/docs/global-configuration.html", children: "全局配置" }), " context 来提供它。"] }), "\n", (0, o.jsx)(e.h2, { id: "global-error-report", children: "全局错误报告" }), "\n", (0, o.jsxs)(e.p, { children: ["你总是可以响应性的在组件内部得到 ", (0, o.jsx)(e.code, { children: "error" }), " 对象。但如果你想要全局处理错误，通知 UI 显示一个 ", (0, o.jsx)(e.a, { href: "https://vercel.com/design/toast", children: "toast" }), " 或者一个 ", (0, o.jsx)(e.a, { href: "https://material.io/components/snackbars", children: "snackbar" }), "，或在某处报告它，比如 ", (0, o.jsx)(e.a, { href: "https://sentry.io", children: "Sentry" }), "，可以用 ", (0, o.jsx)(e.a, { href: "/docs/api#options.html", children: (0, o.jsx)(e.code, { children: "onError" }) }), " 事件："] }), "\n", (0, o.jsx)(e.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, o.jsxs)(e.code, { "data-language": "jsx", "data-theme": "default", children: [(0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "<" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "value" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "{{" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "onError" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (error" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " key) " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " {" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".status " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!==" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "403" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "&&" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".status " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!==" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "404" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ") {" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 我们可以把错误发送给 Sentry，" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "      " }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 或显示一个通知 UI。" })] }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "    }" }) }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  }" }) }), "\n", (0, o.jsx)(e.span, { className: "line", children: (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}}>" }) }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  <" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "MyApp" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " />" })] }), "\n", (0, o.jsxs)(e.span, { className: "line", children: [(0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "</" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "SWRConfig" }), (0, o.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] })] }) })] }) } e.default = (0, n.j)({ MDXContent: function () { let s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e } = Object.assign({}, (0, l.a)(), s.components); return e ? (0, o.jsx)(e, { ...s, children: (0, o.jsx)(t, { ...s }) }) : t(s) }, pageOpts: { filePath: "pages/docs/error-handling.mdx.html", route: "/docs/error-handling.html", title: "错误处理", headings: c }, pageNextRoute: "/docs/error-handling.html" }) } }, function (s) { s.O(0, [17, 888, 774, 179], function () { return s(s.s = 8963) }), _N_E = s.O() }])