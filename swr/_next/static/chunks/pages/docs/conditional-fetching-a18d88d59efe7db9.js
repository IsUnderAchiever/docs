(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[997], { 584: function (s, e, o) { (window.__NEXT_P = window.__NEXT_P || []).push(["/docs/conditional-fetching.html", function () { return o(7087) }]) }, 7087: function (s, e, o) { "use strict"; o.r(e), o.d(e, { __toc: function () { return i } }); var r = o(2676), n = o(3017), l = o(6952); let i = [{ depth: 2, value: "按需请求", id: "conditional" }, { depth: 2, value: "依赖请求", id: "dependent" }]; function t (s) { let e = Object.assign({ h1: "h1", h2: "h2", p: "p", code: "code", pre: "pre", span: "span" }, (0, l.a)(), s.components); return (0, r.jsxs)(r.Fragment, { children: [(0, r.jsx)(e.h1, { children: "条件数据请求" }), "\n", (0, r.jsx)(e.h2, { id: "conditional", children: "按需请求" }), "\n", (0, r.jsxs)(e.p, { children: ["使用 ", (0, r.jsx)(e.code, { children: "null" }), " 或传一个函数作为 ", (0, r.jsx)(e.code, { children: "key" }), " 来有条件地请求数据。如果函数抛出错误或返回 falsy 值，SWR 将不会启动请求。"] }), "\n", (0, r.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, r.jsxs)(e.code, { "data-language": "js", "data-theme": "default", children: [(0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 有条件的请求" }) }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(shouldFetch " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/data'" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: " " }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ...或返回一个 falsy 值" }) }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(() " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " shouldFetch " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "?" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/data'" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: ":" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "null" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: " " }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// ... 或在 user.id 未定义时抛出错误" }) }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(() " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/data?uid='" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".id" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] })] }) }), "\n", (0, r.jsx)(e.h2, { id: "dependent", children: "依赖请求" }), "\n", (0, r.jsx)(e.p, { children: "SWR 还允许请求依赖于其他数据的数据。当需要一段动态数据才能进行下一次数据请求时，它可以确保最大程度的并行性（avoiding waterfalls）以及串行请求。" }), "\n", (0, r.jsx)(e.pre, { "data-language": "js", "data-theme": "default", hasCopyCode: !0, children: (0, r.jsxs)(e.code, { "data-language": "js", "data-theme": "default", children: [(0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "MyProjects" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " () {" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { data: " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ")" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " { data: " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "projects" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "(() " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=>" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/projects?uid='" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "user" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: ".id)" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 传递函数时，SWR 会用返回值作为 `key`。" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 如果函数抛出错误或返回 falsy 值，SWR 会知道某些依赖还没准备好。" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-comment)" }, children: "// 这种情况下，当 `user`未加载时，`user.id` 抛出错误" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: " " }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " (" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "!" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "projects) " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'loading...'" })] }), "\n", (0, r.jsxs)(e.span, { className: "line", children: [(0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'You have '" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "projects" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "." }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-constant)" }, children: "length" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-keyword)" }, children: "+" }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(e.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "' projects'" })] }), "\n", (0, r.jsx)(e.span, { className: "line", children: (0, r.jsx)(e.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) })] }) } e.default = (0, n.j)({ MDXContent: function () { let s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: e } = Object.assign({}, (0, l.a)(), s.components); return e ? (0, r.jsx)(e, { ...s, children: (0, r.jsx)(t, { ...s }) }) : t(s) }, pageOpts: { filePath: "pages/docs/conditional-fetching.mdx.html", route: "/docs/conditional-fetching.html", title: "条件数据请求", headings: i }, pageNextRoute: "/docs/conditional-fetching.html" }) } }, function (s) { s.O(0, [17, 888, 774, 179], function () { return s(s.s = 584) }), _N_E = s.O() }])