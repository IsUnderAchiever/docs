(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[405], { 6187: function (e, s, n) { (window.__NEXT_P = window.__NEXT_P || []).push(["/", function () { return n(5065) }]) }, 5065: function (e, s, n) { "use strict"; n.r(s), n.d(s, { __toc: function () { return k }, default: function () { return v } }); var r = n(2676), i = n(3017), t = n(6952), o = n(4894), l = n(5271), c = n(2488), h = n.n(c), a = n(7133), d = n(1810); function x (e) { let { text: s, icon: n } = e; return (0, r.jsxs)("div", { className: h().feature, children: [n, (0, r.jsx)("h4", { children: s })] }) } let j = [{ key: "lightweight", icon: (0, r.jsx)(function () { return (0, r.jsxs)("svg", { viewBox: "0 0 24 24", width: "24", height: "24", stroke: "currentColor", strokeWidth: "2", fill: "none", strokeLinecap: "round", strokeLinejoin: "round", children: [(0, r.jsx)("path", { d: "M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z" }), (0, r.jsx)("line", { x1: "16", y1: "8", x2: "2", y2: "22" }), (0, r.jsx)("line", { x1: "17.5", y1: "15", x2: "9", y2: "15" })] }) }, {}) }, { key: "realtime", icon: (0, r.jsx)(function () { return (0, r.jsx)("svg", { width: "24", height: "24", fill: "none", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "2", shapeRendering: "geometricPrecision", viewBox: "0 0 24 24", children: (0, r.jsx)("path", { d: "M13 2L3 14h9l-1 8 10-12h-9l1-8z" }) }) }, {}) }, { key: "suspense", icon: (0, r.jsx)(function () { return (0, r.jsxs)("svg", { viewBox: "0 0 24 24", width: "24", height: "24", stroke: "currentColor", strokeWidth: "2", fill: "none", strokeLinecap: "round", strokeLinejoin: "round", children: [(0, r.jsx)("circle", { cx: "12", cy: "12", r: "10" }), (0, r.jsx)("line", { x1: "10", y1: "15", x2: "10", y2: "9" }), (0, r.jsx)("line", { x1: "14", y1: "15", x2: "14", y2: "9" })] }) }, {}) }, { key: "pagination", icon: (0, r.jsx)(function () { return (0, r.jsxs)("svg", { viewBox: "0 0 24 24", width: "24", height: "24", stroke: "currentColor", strokeWidth: "2", fill: "none", strokeLinecap: "round", strokeLinejoin: "round", children: [(0, r.jsx)("circle", { cx: "12", cy: "12", r: "1" }), (0, r.jsx)("circle", { cx: "12", cy: "5", r: "1" }), (0, r.jsx)("circle", { cx: "12", cy: "19", r: "1" })] }) }, {}) }, { key: "backendAgnostic", icon: (0, r.jsx)(function () { return (0, r.jsxs)("svg", { viewBox: "0 0 24 24", width: "24", height: "24", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", fill: "none", shapeRendering: "geometricPrecision", children: [(0, r.jsx)("path", { d: "M20 17.58A5 5 0 0018 8h-1.26A8 8 0 104 16.25" }), (0, r.jsx)("path", { d: "M8 16h.01" }), (0, r.jsx)("path", { d: "M8 20h.01" }), (0, r.jsx)("path", { d: "M12 18h.01" }), (0, r.jsx)("path", { d: "M12 22h.01" }), (0, r.jsx)("path", { d: "M16 16h.01" }), (0, r.jsx)("path", { d: "M16 20h.01" })] }) }, {}) }, { key: "renderingStrategies", icon: (0, r.jsx)(function () { return (0, r.jsx)("svg", { width: "24", height: "24", fill: "none", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "2", shapeRendering: "geometricPrecision", viewBox: "0 0 24 24", children: (0, r.jsx)("path", { d: "M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5" }) }) }, {}) }, { key: "typescript", icon: (0, r.jsx)(function () { return (0, r.jsxs)("svg", { width: "24", height: "24", fill: "none", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "2", shapeRendering: "geometricPrecision", viewBox: "0 0 24 24", children: [(0, r.jsx)("path", { d: "M16.5 9.4l-9-5.19M21 16V8a2 2 0 00-1-1.73l-7-4a2 2 0 00-2 0l-7 4A2 2 0 003 8v8a2 2 0 001 1.73l7 4a2 2 0 002 0l7-4A2 2 0 0021 16z" }), (0, r.jsx)("path", { d: "M3.27 6.96L12 12.01l8.73-5.05M12 22.08V12" })] }) }, {}) }, { key: "remoteLocal", icon: (0, r.jsx)(function () { return (0, r.jsxs)("svg", { width: "24", height: "24", fill: "none", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "2", shapeRendering: "geometricPrecision", viewBox: "0 0 24 24", children: [(0, r.jsx)("circle", { cx: "12", cy: "12", r: "2" }), (0, r.jsx)("path", { d: "M16.24 7.76a6 6 0 010 8.49m-8.48-.01a6 6 0 010-8.49m11.31-2.82a10 10 0 010 14.14m-14.14 0a10 10 0 010-14.14" })] }) }, {}) }]; function p () { let e = (0, l.useId)(), s = (0, a.Z)(d.v7), n = (0, a.Z)(d.zN); return (0, r.jsxs)("div", { className: "mx-auto max-w-full w-[880px] text-center px-4 mb-10", children: [(0, r.jsx)("p", { className: "text-lg mb-2 text-gray-600 md:!text-2xl", children: s }), (0, r.jsx)("div", { className: h().features, children: j.map(s => { let { key: i, icon: t } = s; return (0, r.jsx)(x, { text: n[i], icon: t }, e + i) }) })] }) } let k = [{ depth: 2, value: "概览", id: "overview" }, { depth: 2, value: "特性", id: "features" }, { depth: 2, value: "社区", id: "community" }]; function u (e) { let s = Object.assign({ h1: "h1", p: "p", code: "code", a: "a", h2: "h2", pre: "pre", span: "span", ul: "ul", li: "li", strong: "strong" }, (0, t.a)(), e.components); return (0, r.jsxs)(r.Fragment, { children: ["\n", (0, r.jsx)(s.h1, { className: "text-center text-4xl tracking-tighter font-extrabold md:text-5xl mt-8", children: "SWR" }), "\n", (0, r.jsx)(o.zu, { children: (0, r.jsx)(p, {}) }), "\n", (0, r.jsxs)(s.p, { children: ["“SWR” 这个名字来自于 ", (0, r.jsx)(s.code, { children: "stale-while-revalidate" }), "：一种由 ", (0, r.jsx)(s.a, { href: "https://tools.ietf.org/html/rfc5861", children: "HTTP RFC 5861" }), " 推广的 HTTP 缓存失效策略。这种策略首先从缓存中返回数据（过期的），同时发送 fetch 请求（重新验证），最后得到最新数据。"] }), "\n", (0, r.jsx)(o.UW, { emoji: "✅", children: (0, r.jsxs)(s.p, { children: ["使用 SWR，组件将会", (0, r.jsx)("strong", { children: "不断地" }), "、", (0, r.jsx)("strong", { children: "自动" }), "获得最新数据流。", (0, r.jsx)("br", {}), "\nUI 也会一直保持", (0, r.jsx)("strong", { children: "快速响应" }), "。"] }) }), "\n", (0, r.jsx)("div", { className: "mt-16 mb-20 text-center", children: (0, r.jsxs)(s.p, { children: [(0, r.jsx)(s.a, { href: "/docs/getting-started.html", children: "入门" }), " \xb7 ", (0, r.jsx)(s.a, { href: "/examples/basic.html", children: "示例" }), " \xb7 ", (0, r.jsx)(s.a, { href: "/blog.html", children: "博客" }), " \xb7 ", (0, r.jsx)(s.a, { href: "https://github.com/vercel/swr", children: "GitHub 仓库" })] }) }), "\n", (0, r.jsx)(s.h2, { id: "overview", children: "概览" }), "\n", (0, r.jsx)(s.pre, { "data-language": "jsx", "data-theme": "default", hasCopyCode: !0, children: (0, r.jsxs)(s.code, { "data-language": "jsx", "data-theme": "default", children: [(0, r.jsxs)(s.span, { className: "line", children: [(0, r.jsx)(s.span, { style: { color: "var(--shiki-token-keyword)" }, children: "import" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " useSWR " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-keyword)" }, children: "from" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'swr'" })] }), "\n", (0, r.jsx)(s.span, { className: "line", children: " " }), "\n", (0, r.jsxs)(s.span, { className: "line", children: [(0, r.jsx)(s.span, { style: { color: "var(--shiki-token-keyword)" }, children: "function" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-function)" }, children: "Profile" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: "() {" })] }), "\n", (0, r.jsxs)(s.span, { className: "line", children: [(0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-keyword)" }, children: "const" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " { " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-constant)" }, children: "error" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-constant)" }, children: "isLoading" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " } " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-keyword)" }, children: "=" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-function)" }, children: "useSWR" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: "(" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "'/api/user'" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-punctuation)" }, children: "," }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " fetcher)" })] }), "\n", (0, r.jsx)(s.span, { className: "line", children: " " }), "\n", (0, r.jsxs)(s.span, { className: "line", children: [(0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " (error) " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: ">failed to load</" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, r.jsxs)(s.span, { className: "line", children: [(0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-keyword)" }, children: "if" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " (isLoading) " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: ">loading...</" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, r.jsxs)(s.span, { className: "line", children: [(0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: "  " }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-keyword)" }, children: "return" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: " <" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: ">hello {" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-constant)" }, children: "data" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: ".name}!</" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-token-string-expression)" }, children: "div" }), (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: ">" })] }), "\n", (0, r.jsx)(s.span, { className: "line", children: (0, r.jsx)(s.span, { style: { color: "var(--shiki-color-text)" }, children: "}" }) })] }) }), "\n", (0, r.jsxs)(s.p, { children: ["该示例中，", (0, r.jsx)(s.code, { children: "useSWR" }), " hook 接受一个字符串 ", (0, r.jsx)(s.code, { children: "key" }), " 和一个函数 ", (0, r.jsx)(s.code, { children: "fetcher" }), "。", (0, r.jsx)(s.code, { children: "key" }), " 是数据的唯一标识符（通常是 API URL），并传递给 ", (0, r.jsx)(s.code, { children: "fetcher" }), "。", (0, r.jsx)(s.code, { children: "fetcher" }), " 可以是任何返回数据的异步函数，你可以使用原生的 fetch 或 Axios 之类的工具。"] }), "\n", (0, r.jsxs)(s.p, { children: ["基于请求的状态，这个 hook 返回 2 个值：", (0, r.jsx)(s.code, { children: "data" }), " 和 ", (0, r.jsx)(s.code, { children: "error" }), "。"] }), "\n", (0, r.jsx)(s.h2, { id: "features", children: "特性" }), "\n", (0, r.jsx)(s.p, { children: "仅需一行代码，你就可以简化项目中数据请求的逻辑，并立即拥有以下这些不可思议的特性：" }), "\n", (0, r.jsxs)(s.ul, { children: ["\n", (0, r.jsxs)(s.li, { children: [(0, r.jsx)(s.strong, { children: "极速" }), "、", (0, r.jsx)(s.strong, { children: "轻量" }), "、", (0, r.jsx)(s.strong, { children: "可重用的" }), " 数据请求"] }), "\n", (0, r.jsxs)(s.li, { children: ["内置 ", (0, r.jsx)(s.strong, { children: "缓存" }), " 和重复请求去除"] }), "\n", (0, r.jsxs)(s.li, { children: [(0, r.jsx)(s.strong, { children: "实时" }), " 体验"] }), "\n", (0, r.jsx)(s.li, { children: "传输和协议不可知" }), "\n", (0, r.jsx)(s.li, { children: "支持 SSR / ISR / SSG" }), "\n", (0, r.jsx)(s.li, { children: "支持 TypeScript" }), "\n", (0, r.jsx)(s.li, { children: "React Native" }), "\n"] }), "\n", (0, r.jsx)(s.p, { children: "SWR 涵盖了性能，正确性和稳定性的各个方面，以帮你建立更好的体验：" }), "\n", (0, r.jsxs)(s.ul, { children: ["\n", (0, r.jsx)(s.li, { children: "快速页面导航" }), "\n", (0, r.jsx)(s.li, { children: "间隔轮询" }), "\n", (0, r.jsx)(s.li, { children: "数据依赖" }), "\n", (0, r.jsx)(s.li, { children: "聚焦时重新验证" }), "\n", (0, r.jsx)(s.li, { children: "网络恢复时重新验证" }), "\n", (0, r.jsx)(s.li, { children: "本地缓存更新 (Optimistic UI)" }), "\n", (0, r.jsx)(s.li, { children: "智能错误重试" }), "\n", (0, r.jsx)(s.li, { children: "分页和滚动位置恢复" }), "\n", (0, r.jsx)(s.li, { children: "React Suspense" }), "\n"] }), "\n", (0, r.jsxs)(s.p, { children: ["以及 ", (0, r.jsx)(s.a, { href: "/docs/getting-started.html", children: "更多" }), "。"] }), "\n", (0, r.jsx)(s.h2, { id: "community", children: "社区" }), "\n", (0, r.jsxs)("p", { className: "flex h-6 mt-4 gap-2", children: [(0, r.jsx)("img", { alt: "stars", src: "https://badgen.net/github/stars/vercel/swr" }), (0, r.jsx)("img", { alt: "downloads", src: "https://badgen.net/npm/dt/swr" }), (0, r.jsx)("img", { alt: "license", src: "https://badgen.net/npm/license/swr" })] }), "\n", (0, r.jsxs)(s.p, { children: ["SWR 由 ", (0, r.jsx)(s.a, { href: "https://nextjs.org", children: "Next.js" }), "（React 框架）背后的同一团队创建。\n在 Twitter 上关注 ", (0, r.jsx)(s.a, { href: "https://twitter.com/vercel", children: "@vercel" }), " 未来项目更新"] }), "\n", (0, r.jsxs)(s.p, { children: ["欢迎加入 ", (0, r.jsx)(s.a, { href: "https://github.com/vercel/swr/discussions", children: "GitHub 上的讨论" }), "！"] })] }) } var v = (0, i.j)({ MDXContent: function () { let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, { wrapper: s } = Object.assign({}, (0, t.a)(), e.components); return s ? (0, r.jsx)(s, { ...e, children: (0, r.jsx)(u, { ...e }) }) : u(e) }, pageOpts: { filePath: "pages/index.mdx", route: "/", frontMatter: { title: "用于数据请求的 React Hooks 库" }, title: "用于数据请求的 React Hooks 库", headings: k }, pageNextRoute: "/" }) }, 2488: function (e) { e.exports = { features: "features_features__OBEXl", feature: "features_feature__4SvtF" } } }, function (e) { e.O(0, [17, 888, 774, 179], function () { return e(e.s = 6187) }), _N_E = e.O() }])